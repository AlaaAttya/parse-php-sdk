<?xml version="1.0" encoding="utf-8"?>
<project title="Parse PHP SDK API Reference" version="2.6.1">
  <partials/>
  <file path="ParseClient.php" generated-path="ParseClient.html" hash="827eb5d568a64ebd66fdb4f48dfe4e3b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="true" abstract="false" namespace="Parse" line="14" package="Parse">
      <extends/>
      <name>ParseClient</name>
      <full_name>\Parse\ParseClient</full_name>
      <docblock line="14">
        <description>ParseClient - Main class for Parse initialization and communication</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Parse"/>
        <tag name="author" line="14" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="58" package="Parse">
        <name>initialize</name>
        <full_name>\Parse\ParseClient::initialize()</full_name>
        <docblock line="58">
          <description>Parse\Client::initialize, must be called before using Parse features.</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;Parse Application ID&lt;/p&gt;" type="string" variable="$app_id">
            <type>string</type>
          </tag>
          <tag name="param" line="58" description="&lt;p&gt;Parse REST API Key&lt;/p&gt;" type="string" variable="$rest_key">
            <type>string</type>
          </tag>
          <tag name="param" line="58" description="&lt;p&gt;Parse Master Key&lt;/p&gt;" type="string" variable="$master_key">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$app_id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rest_key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$master_key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="276" package="Parse">
        <name>setStorage</name>
        <full_name>\Parse\ParseClient::setStorage()</full_name>
        <docblock line="276">
          <description>ParseClient::setStorage, will update the storage object used for
persistence.</description>
          <long-description></long-description>
          <tag name="param" line="276" description="" type="\Parse\ParseStorageInterface" variable="$storageObject">
            <type>\Parse\ParseStorageInterface</type>
          </tag>
          <tag name="return" line="276" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$storageObject</name>
          <default></default>
          <type>\Parse\ParseStorageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="287" package="Parse">
        <name>getStorage</name>
        <full_name>\Parse\ParseClient::getStorage()</full_name>
        <docblock line="287">
          <description>ParseClient::getStorage, will return the storage object used for
persistence.</description>
          <long-description></long-description>
          <tag name="return" line="287" description="" type="\Parse\ParseStorageInterface">
            <type>\Parse\ParseStorageInterface</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="ParseUser.php" generated-path="ParseUser.html" hash="2e155d803957b82d41cd5b2327323ed0" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends>\Parse\ParseObject</extends>
      <name>ParseUser</name>
      <full_name>\Parse\ParseUser</full_name>
      <docblock line="11">
        <description>ParseUser - Representation of a user object stored on Parse.</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
        <tag name="inherited_from" description="\Parse\ParseObject" refers="\Parse\ParseObject" link="/classes/Parse.ParseObject.html"/>
      </docblock>
      <property static="true" visibility="public" namespace="Parse" line="14" package="Parse">
        <name>$parseClassName</name>
        <full_name>\Parse\ParseUser::parseClassName</full_name>
        <default>"_User"</default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="31" package="Parse">
        <name>getUsername</name>
        <full_name>\Parse\ParseUser::getUsername()</full_name>
        <docblock line="31">
          <description>Returns the username.</description>
          <long-description></long-description>
          <tag name="return" line="31" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="43" package="Parse">
        <name>setUsername</name>
        <full_name>\Parse\ParseUser::setUsername()</full_name>
        <docblock line="43">
          <description>Sets the username for the ParseUser.</description>
          <long-description></long-description>
          <tag name="param" line="43" description="&lt;p&gt;The username&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="43" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="55" package="Parse">
        <name>setPassword</name>
        <full_name>\Parse\ParseUser::setPassword()</full_name>
        <docblock line="55">
          <description>Sets the password for the ParseUser.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;The password&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="55" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="65" package="Parse">
        <name>getEmail</name>
        <full_name>\Parse\ParseUser::getEmail()</full_name>
        <docblock line="65">
          <description>Returns the email address, if set, for the ParseUser.</description>
          <long-description></long-description>
          <tag name="return" line="65" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="77" package="Parse">
        <name>setEmail</name>
        <full_name>\Parse\ParseUser::setEmail()</full_name>
        <docblock line="77">
          <description>Sets the email address for the ParseUser.</description>
          <long-description></long-description>
          <tag name="param" line="77" description="&lt;p&gt;The email address&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="return" line="77" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="87" package="Parse">
        <name>isAuthenticated</name>
        <full_name>\Parse\ParseUser::isAuthenticated()</full_name>
        <docblock line="87">
          <description>Checks whether this user has been authenticated.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="97" package="Parse">
        <name>signUp</name>
        <full_name>\Parse\ParseUser::signUp()</full_name>
        <docblock line="97">
          <description>Signs up the current user, or throw if invalid.</description>
          <long-description>This will create a new ParseUser on the server, and also persist the
session so that you can access the user using ParseUser::getCurrentUser();</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="126" package="Parse">
        <name>logIn</name>
        <full_name>\Parse\ParseUser::logIn()</full_name>
        <docblock line="126">
          <description>Logs in a and returns a valid ParseUser, or throws if invalid.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="126" description="" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="\Parse\ParseUser">
            <type>\Parse\ParseUser</type>
          </tag>
          <tag name="throws" line="126" description="" type="\Parse\ParseException">
            <type>\Parse\ParseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="153" package="Parse">
        <name>become</name>
        <full_name>\Parse\ParseUser::become()</full_name>
        <docblock line="153">
          <description>Logs in a user with a session token.  Calls the /users/me route and if
  valid, creates and returns the current user.</description>
          <long-description></long-description>
          <tag name="param" line="153" description="" type="string" variable="$sessionToken">
            <type>string</type>
          </tag>
          <tag name="return" line="153" description="" type="\Parse\ParseUser">
            <type>\Parse\ParseUser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sessionToken</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="169" package="Parse">
        <name>logOut</name>
        <full_name>\Parse\ParseUser::logOut()</full_name>
        <docblock line="169">
          <description>Log out the current user.  This will clear the storage and future calls
  to current will return null</description>
          <long-description></long-description>
          <tag name="return" line="169" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="206" package="Parse">
        <name>getCurrentUser</name>
        <full_name>\Parse\ParseUser::getCurrentUser()</full_name>
        <docblock line="206">
          <description>Retrieves the currently logged in ParseUser with a valid session,
either from memory or the storage provider, if necessary.</description>
          <long-description></long-description>
          <tag name="return" line="206" description="" type="\Parse\ParseUser|null">
            <type>\Parse\ParseUser</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="246" package="Parse">
        <name>getSessionToken</name>
        <full_name>\Parse\ParseUser::getSessionToken()</full_name>
        <docblock line="246">
          <description>Returns the session token, if available</description>
          <long-description></long-description>
          <tag name="return" line="246" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="256" package="Parse">
        <name>isCurrent</name>
        <full_name>\Parse\ParseUser::isCurrent()</full_name>
        <docblock line="256">
          <description>Returns true if this user is the current user.</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="273" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseUser::save()</full_name>
        <docblock line="273">
          <description>Save the current user object, unless it is not signed up.</description>
          <long-description></long-description>
          <tag name="return" line="273" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="273" description="" type="\Parse\ParseException">
            <type>\Parse\ParseException</type>
          </tag>
          <tag name="inherited_from" description="\Parse\ParseObject::save()" refers="\Parse\ParseObject::save()" link="/classes/Parse.ParseObject.html#method_save"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="293" package="Parse">
        <name>requestPasswordReset</name>
        <full_name>\Parse\ParseUser::requestPasswordReset()</full_name>
        <docblock line="293">
          <description>Requests a password reset email to be sent to the specified email
address associated with the user account.  This email allows the user
to securely reset their password on the Parse site.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="return" line="293" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="82" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseObject::__construct()</full_name>
        <docblock line="82">
          <description>Create a Parse Object</description>
          <long-description>Creates a pointer object if an objectId is provided,
otherwise creates a new object.</long-description>
          <tag name="param" line="82" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="82" description="&lt;p&gt;Object Id for Existing object.&lt;/p&gt;" type="mixed" variable="$objectId">
            <type>mixed</type>
          </tag>
          <tag name="param" line="82" description="" type="boolean" variable="$isPointer">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="82" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="164" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseObject::get()</full_name>
        <docblock line="164">
          <description>Get current value for an object property.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="&lt;p&gt;Key to retrieve from the estimatedData array.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="164" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="164" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="183" package="Parse">
        <name>has</name>
        <full_name>\Parse\ParseObject::has()</full_name>
        <docblock line="183">
          <description>Check if the object has a given key</description>
          <long-description></long-description>
          <tag name="param" line="183" description="&lt;p&gt;Key to check&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="183" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="195" package="Parse">
        <name>isKeyDirty</name>
        <full_name>\Parse\ParseObject::isKeyDirty()</full_name>
        <docblock line="195">
          <description>Check if the a value associated with a key has been
added/updated/removed and not saved yet.</description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="195" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="205" package="Parse">
        <name>isDirty</name>
        <full_name>\Parse\ParseObject::isDirty()</full_name>
        <docblock line="205">
          <description>Check if the object or any of its child objects have unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="205" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="248" package="Parse">
        <name>set</name>
        <full_name>\Parse\ParseObject::set()</full_name>
        <docblock line="248">
          <description>Validate and set a value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="248" description="&lt;p&gt;Key to set a value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="248" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="248" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="248" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="270" package="Parse">
        <name>setArray</name>
        <full_name>\Parse\ParseObject::setArray()</full_name>
        <docblock line="270">
          <description>Set an array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="270" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="270" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="270" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="292" package="Parse">
        <name>setAssociativeArray</name>
        <full_name>\Parse\ParseObject::setAssociativeArray()</full_name>
        <docblock line="292">
          <description>Set an associative array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="292" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="292" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="292" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="292" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="314" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseObject::remove()</full_name>
        <docblock line="314">
          <description>Remove a value from an array for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="314" description="&lt;p&gt;Key to remove the value from on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="314" description="&lt;p&gt;Value to remove from the array.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="314" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="314" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="330" package="Parse">
        <name>revert</name>
        <full_name>\Parse\ParseObject::revert()</full_name>
        <docblock line="330">
          <description>Revert all unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="330" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="342" package="Parse">
        <name>clear</name>
        <full_name>\Parse\ParseObject::clear()</full_name>
        <docblock line="342">
          <description>Clear all keys on this object by creating delete operations
for each key.</description>
          <long-description></long-description>
          <tag name="return" line="342" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="386" package="Parse">
        <name>getClassName</name>
        <full_name>\Parse\ParseObject::getClassName()</full_name>
        <docblock line="386">
          <description>Get the Parse Class Name for the object.</description>
          <long-description></long-description>
          <tag name="return" line="386" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="396" package="Parse">
        <name>getObjectId</name>
        <full_name>\Parse\ParseObject::getObjectId()</full_name>
        <docblock line="396">
          <description>Get the objectId for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="396" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="406" package="Parse">
        <name>getCreatedAt</name>
        <full_name>\Parse\ParseObject::getCreatedAt()</full_name>
        <docblock line="406">
          <description>Get the createdAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="406" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="416" package="Parse">
        <name>isDataAvailable</name>
        <full_name>\Parse\ParseObject::isDataAvailable()</full_name>
        <docblock line="416">
          <description>Returns true if the object has been fetched.</description>
          <long-description></long-description>
          <tag name="return" line="416" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="432" package="Parse">
        <name>getUpdatedAt</name>
        <full_name>\Parse\ParseObject::getUpdatedAt()</full_name>
        <docblock line="432">
          <description>Get the updatedAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="432" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="447" package="Parse">
        <name>create</name>
        <full_name>\Parse\ParseObject::create()</full_name>
        <docblock line="447">
          <description>Static method which returns a new Parse Object for a given class</description>
          <long-description>Optionally creates a pointer object if the objectId is provided.</long-description>
          <tag name="param" line="447" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="447" description="&lt;p&gt;Unique identifier for existing object.&lt;/p&gt;" type="string" variable="$objectId">
            <type>string</type>
          </tag>
          <tag name="return" line="447" description="" type="Object">
            <type>Object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="464" package="Parse">
        <name>fetch</name>
        <full_name>\Parse\ParseObject::fetch()</full_name>
        <docblock line="464">
          <description>Fetch the whole object from the server and update the local object.</description>
          <long-description></long-description>
          <tag name="return" line="464" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="632" package="Parse">
        <name>destroy</name>
        <full_name>\Parse\ParseObject::destroy()</full_name>
        <docblock line="632">
          <description>Delete object.</description>
          <long-description></long-description>
          <tag name="return" line="632" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="655" package="Parse">
        <name>destroyAll</name>
        <full_name>\Parse\ParseObject::destroyAll()</full_name>
        <docblock line="655">
          <description>Delete an array of objects.</description>
          <long-description></long-description>
          <tag name="param" line="655" description="&lt;p&gt;Objects to destroy.&lt;/p&gt;" type="array" variable="$objects">
            <type>array</type>
          </tag>
          <tag name="param" line="655" description="&lt;p&gt;Whether to use the master key or not.&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="655" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objects</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="725" package="Parse">
        <name>increment</name>
        <full_name>\Parse\ParseObject::increment()</full_name>
        <docblock line="725">
          <description>Increment a numeric key by a certain value.</description>
          <long-description></long-description>
          <tag name="param" line="725" description="&lt;p&gt;Key for numeric value on object to increment.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="725" description="&lt;p&gt;Value to increment by.&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="725" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="738" package="Parse">
        <name>add</name>
        <full_name>\Parse\ParseObject::add()</full_name>
        <docblock line="738">
          <description>Add a value to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="738" description="&lt;p&gt;Key for array value on object to add a value to.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="738" description="&lt;p&gt;Value to add.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="738" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="751" package="Parse">
        <name>addUnique</name>
        <full_name>\Parse\ParseObject::addUnique()</full_name>
        <docblock line="751">
          <description>Add unique values to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="751" description="&lt;p&gt;Key for array value on object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="751" description="&lt;p&gt;Value list to add uniquely.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="751" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="763" package="Parse">
        <name>delete</name>
        <full_name>\Parse\ParseObject::delete()</full_name>
        <docblock line="763">
          <description>Delete a key from an object.</description>
          <long-description></long-description>
          <tag name="param" line="763" description="&lt;p&gt;Key to remove from object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="763" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="823" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseObject::save()</full_name>
        <docblock line="823">
          <description>Save Object to Parse</description>
          <long-description></long-description>
          <tag name="return" line="823" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="838" package="Parse">
        <name>saveAll</name>
        <full_name>\Parse\ParseObject::saveAll()</full_name>
        <docblock line="838">
          <description>Save all the objects in the provided array</description>
          <long-description></long-description>
          <tag name="param" line="838" description="" type="array" variable="$list">
            <type>array</type>
          </tag>
          <tag name="return" line="838" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$list</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1076" package="Parse">
        <name>getRelation</name>
        <full_name>\Parse\ParseObject::getRelation()</full_name>
        <docblock line="1076">
          <description>Access or create a Relation value for a key.</description>
          <long-description></long-description>
          <tag name="param" line="1076" description="&lt;p&gt;The key to access the relation for.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1076" description="The ParseRelation object if the relation already&#10;                      exists for the key or can be created for this key." type="\Parse\ParseRelation">
            <type>\Parse\ParseRelation</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1112" package="Parse">
        <name>setACL</name>
        <full_name>\Parse\ParseObject::setACL()</full_name>
        <docblock line="1112">
          <description>Set ACL for this object.</description>
          <long-description></long-description>
          <tag name="param" line="1112" description="" type="\Parse\ParseACL" variable="$acl">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Parse\ParseACL</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1122" package="Parse">
        <name>getACL</name>
        <full_name>\Parse\ParseObject::getACL()</full_name>
        <docblock line="1122">
          <description>Get ACL assigned to the object.</description>
          <long-description></long-description>
          <tag name="return" line="1122" description="" type="\Parse\ParseACL">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1144" package="Parse">
        <name>registerSubclass</name>
        <full_name>\Parse\ParseObject::registerSubclass()</full_name>
        <docblock line="1144">
          <description>Register a subclass.  Should be called before any other Parse functions.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="throws" line="1144" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1177" package="Parse">
        <name>query</name>
        <full_name>\Parse\ParseObject::query()</full_name>
        <docblock line="1177">
          <description>Creates a ParseQuery for the subclass of ParseObject.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="return" line="1177" description="" type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="throws" line="1177" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $parseClassName</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="ParseInstallation.php" generated-path="ParseInstallation.html" hash="8e993e66a66d45853712050bf573179a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="13" package="Parse">
      <extends>\Parse\ParseObject</extends>
      <name>ParseInstallation</name>
      <full_name>\Parse\ParseInstallation</full_name>
      <docblock line="13">
        <description>ParseInstallation - Representation of an Installation stored on Parse.</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Parse"/>
        <tag name="author" line="13" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
        <tag name="inherited_from" description="\Parse\ParseObject" refers="\Parse\ParseObject" link="/classes/Parse.ParseObject.html"/>
      </docblock>
      <property static="true" visibility="public" namespace="Parse" line="16" package="Parse">
        <name>$parseClassName</name>
        <full_name>\Parse\ParseInstallation::parseClassName</full_name>
        <default>"_Installation"</default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="82" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseObject::__construct()</full_name>
        <docblock line="82">
          <description>Create a Parse Object</description>
          <long-description>Creates a pointer object if an objectId is provided,
otherwise creates a new object.</long-description>
          <tag name="param" line="82" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="82" description="&lt;p&gt;Object Id for Existing object.&lt;/p&gt;" type="mixed" variable="$objectId">
            <type>mixed</type>
          </tag>
          <tag name="param" line="82" description="" type="boolean" variable="$isPointer">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="82" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="164" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseObject::get()</full_name>
        <docblock line="164">
          <description>Get current value for an object property.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="&lt;p&gt;Key to retrieve from the estimatedData array.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="164" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="164" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="183" package="Parse">
        <name>has</name>
        <full_name>\Parse\ParseObject::has()</full_name>
        <docblock line="183">
          <description>Check if the object has a given key</description>
          <long-description></long-description>
          <tag name="param" line="183" description="&lt;p&gt;Key to check&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="183" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="195" package="Parse">
        <name>isKeyDirty</name>
        <full_name>\Parse\ParseObject::isKeyDirty()</full_name>
        <docblock line="195">
          <description>Check if the a value associated with a key has been
added/updated/removed and not saved yet.</description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="195" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="205" package="Parse">
        <name>isDirty</name>
        <full_name>\Parse\ParseObject::isDirty()</full_name>
        <docblock line="205">
          <description>Check if the object or any of its child objects have unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="205" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="248" package="Parse">
        <name>set</name>
        <full_name>\Parse\ParseObject::set()</full_name>
        <docblock line="248">
          <description>Validate and set a value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="248" description="&lt;p&gt;Key to set a value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="248" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="248" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="248" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="270" package="Parse">
        <name>setArray</name>
        <full_name>\Parse\ParseObject::setArray()</full_name>
        <docblock line="270">
          <description>Set an array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="270" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="270" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="270" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="292" package="Parse">
        <name>setAssociativeArray</name>
        <full_name>\Parse\ParseObject::setAssociativeArray()</full_name>
        <docblock line="292">
          <description>Set an associative array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="292" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="292" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="292" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="292" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="314" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseObject::remove()</full_name>
        <docblock line="314">
          <description>Remove a value from an array for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="314" description="&lt;p&gt;Key to remove the value from on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="314" description="&lt;p&gt;Value to remove from the array.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="314" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="314" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="330" package="Parse">
        <name>revert</name>
        <full_name>\Parse\ParseObject::revert()</full_name>
        <docblock line="330">
          <description>Revert all unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="330" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="342" package="Parse">
        <name>clear</name>
        <full_name>\Parse\ParseObject::clear()</full_name>
        <docblock line="342">
          <description>Clear all keys on this object by creating delete operations
for each key.</description>
          <long-description></long-description>
          <tag name="return" line="342" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="386" package="Parse">
        <name>getClassName</name>
        <full_name>\Parse\ParseObject::getClassName()</full_name>
        <docblock line="386">
          <description>Get the Parse Class Name for the object.</description>
          <long-description></long-description>
          <tag name="return" line="386" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="396" package="Parse">
        <name>getObjectId</name>
        <full_name>\Parse\ParseObject::getObjectId()</full_name>
        <docblock line="396">
          <description>Get the objectId for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="396" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="406" package="Parse">
        <name>getCreatedAt</name>
        <full_name>\Parse\ParseObject::getCreatedAt()</full_name>
        <docblock line="406">
          <description>Get the createdAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="406" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="416" package="Parse">
        <name>isDataAvailable</name>
        <full_name>\Parse\ParseObject::isDataAvailable()</full_name>
        <docblock line="416">
          <description>Returns true if the object has been fetched.</description>
          <long-description></long-description>
          <tag name="return" line="416" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="432" package="Parse">
        <name>getUpdatedAt</name>
        <full_name>\Parse\ParseObject::getUpdatedAt()</full_name>
        <docblock line="432">
          <description>Get the updatedAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="432" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="447" package="Parse">
        <name>create</name>
        <full_name>\Parse\ParseObject::create()</full_name>
        <docblock line="447">
          <description>Static method which returns a new Parse Object for a given class</description>
          <long-description>Optionally creates a pointer object if the objectId is provided.</long-description>
          <tag name="param" line="447" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="447" description="&lt;p&gt;Unique identifier for existing object.&lt;/p&gt;" type="string" variable="$objectId">
            <type>string</type>
          </tag>
          <tag name="return" line="447" description="" type="Object">
            <type>Object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="464" package="Parse">
        <name>fetch</name>
        <full_name>\Parse\ParseObject::fetch()</full_name>
        <docblock line="464">
          <description>Fetch the whole object from the server and update the local object.</description>
          <long-description></long-description>
          <tag name="return" line="464" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="632" package="Parse">
        <name>destroy</name>
        <full_name>\Parse\ParseObject::destroy()</full_name>
        <docblock line="632">
          <description>Delete object.</description>
          <long-description></long-description>
          <tag name="return" line="632" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="655" package="Parse">
        <name>destroyAll</name>
        <full_name>\Parse\ParseObject::destroyAll()</full_name>
        <docblock line="655">
          <description>Delete an array of objects.</description>
          <long-description></long-description>
          <tag name="param" line="655" description="&lt;p&gt;Objects to destroy.&lt;/p&gt;" type="array" variable="$objects">
            <type>array</type>
          </tag>
          <tag name="param" line="655" description="&lt;p&gt;Whether to use the master key or not.&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="655" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objects</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="725" package="Parse">
        <name>increment</name>
        <full_name>\Parse\ParseObject::increment()</full_name>
        <docblock line="725">
          <description>Increment a numeric key by a certain value.</description>
          <long-description></long-description>
          <tag name="param" line="725" description="&lt;p&gt;Key for numeric value on object to increment.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="725" description="&lt;p&gt;Value to increment by.&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="725" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="738" package="Parse">
        <name>add</name>
        <full_name>\Parse\ParseObject::add()</full_name>
        <docblock line="738">
          <description>Add a value to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="738" description="&lt;p&gt;Key for array value on object to add a value to.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="738" description="&lt;p&gt;Value to add.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="738" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="751" package="Parse">
        <name>addUnique</name>
        <full_name>\Parse\ParseObject::addUnique()</full_name>
        <docblock line="751">
          <description>Add unique values to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="751" description="&lt;p&gt;Key for array value on object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="751" description="&lt;p&gt;Value list to add uniquely.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="751" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="763" package="Parse">
        <name>delete</name>
        <full_name>\Parse\ParseObject::delete()</full_name>
        <docblock line="763">
          <description>Delete a key from an object.</description>
          <long-description></long-description>
          <tag name="param" line="763" description="&lt;p&gt;Key to remove from object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="763" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="823" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseObject::save()</full_name>
        <docblock line="823">
          <description>Save Object to Parse</description>
          <long-description></long-description>
          <tag name="return" line="823" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="838" package="Parse">
        <name>saveAll</name>
        <full_name>\Parse\ParseObject::saveAll()</full_name>
        <docblock line="838">
          <description>Save all the objects in the provided array</description>
          <long-description></long-description>
          <tag name="param" line="838" description="" type="array" variable="$list">
            <type>array</type>
          </tag>
          <tag name="return" line="838" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$list</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1076" package="Parse">
        <name>getRelation</name>
        <full_name>\Parse\ParseObject::getRelation()</full_name>
        <docblock line="1076">
          <description>Access or create a Relation value for a key.</description>
          <long-description></long-description>
          <tag name="param" line="1076" description="&lt;p&gt;The key to access the relation for.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1076" description="The ParseRelation object if the relation already&#10;                      exists for the key or can be created for this key." type="\Parse\ParseRelation">
            <type>\Parse\ParseRelation</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1112" package="Parse">
        <name>setACL</name>
        <full_name>\Parse\ParseObject::setACL()</full_name>
        <docblock line="1112">
          <description>Set ACL for this object.</description>
          <long-description></long-description>
          <tag name="param" line="1112" description="" type="\Parse\ParseACL" variable="$acl">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Parse\ParseACL</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1122" package="Parse">
        <name>getACL</name>
        <full_name>\Parse\ParseObject::getACL()</full_name>
        <docblock line="1122">
          <description>Get ACL assigned to the object.</description>
          <long-description></long-description>
          <tag name="return" line="1122" description="" type="\Parse\ParseACL">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1144" package="Parse">
        <name>registerSubclass</name>
        <full_name>\Parse\ParseObject::registerSubclass()</full_name>
        <docblock line="1144">
          <description>Register a subclass.  Should be called before any other Parse functions.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="throws" line="1144" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1177" package="Parse">
        <name>query</name>
        <full_name>\Parse\ParseObject::query()</full_name>
        <docblock line="1177">
          <description>Creates a ParseQuery for the subclass of ParseObject.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="return" line="1177" description="" type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="throws" line="1177" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $parseClassName</error>
    </parse_markers>
    <source>eJxtUMFKA1EMvOcrhuJpwfYDrFoQCh5apWdBsq9Z27r78njJQqH0332724OClxBmJpNJls/pkIgid2KJg+Cds8kDUW+3/mOsb/VJghd8UVWEaqJeozm3LftRI+6xk5TFJPoEaAOO+KMx1yx7lG6cnxenwWxVNn/zl2CCR4h7P2gGsFYLig1ndVcsm1O3aup50O6p6BYUWjb7J46cXeL+xkzp6UIEpL5uj6FEKbqAuzTwL4PJtvwAj5h9/vaZlZOvPyf4Ylg=</source>
  </file>
  <file path="ParseGeoPoint.php" generated-path="ParseGeoPoint.html" hash="f5af23bcb345112b9814981cb9215c2e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends/>
      <implements>\Parse\Internal\Encodable</implements>
      <name>ParseGeoPoint</name>
      <full_name>\Parse\ParseGeoPoint</full_name>
      <docblock line="11">
        <description>ParseGeoPoint - Representation of a Parse GeoPoint object.</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="29" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseGeoPoint::__construct()</full_name>
        <docblock line="29">
          <description>Create a Parse GeoPoint object.</description>
          <long-description></long-description>
          <tag name="param" line="29" description="&lt;p&gt;Latitude.&lt;/p&gt;" type="float" variable="$lat">
            <type>float</type>
          </tag>
          <tag name="param" line="29" description="&lt;p&gt;Longitude.&lt;/p&gt;" type="float" variable="$lon">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lat</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lon</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="40" package="Parse">
        <name>getLatitude</name>
        <full_name>\Parse\ParseGeoPoint::getLatitude()</full_name>
        <docblock line="40">
          <description>Returns the Latitude value for this GeoPoint.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="52" package="Parse">
        <name>setLatitude</name>
        <full_name>\Parse\ParseGeoPoint::setLatitude()</full_name>
        <docblock line="52">
          <description>Set the Latitude value for this GeoPoint.</description>
          <long-description></long-description>
          <tag name="param" line="52" description="" type="" variable="$lat"/>
          <tag name="throws" line="52" description="" type="\Parse\ParseException">
            <type>\Parse\ParseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lat</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="65" package="Parse">
        <name>getLongitude</name>
        <full_name>\Parse\ParseGeoPoint::getLongitude()</full_name>
        <docblock line="65">
          <description>Returns the Longitude value for this GeoPoint.</description>
          <long-description></long-description>
          <tag name="return" line="65" description="" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="77" package="Parse">
        <name>setLongitude</name>
        <full_name>\Parse\ParseGeoPoint::setLongitude()</full_name>
        <docblock line="77">
          <description>Set the Longitude value for this GeoPoint.</description>
          <long-description></long-description>
          <tag name="param" line="77" description="" type="" variable="$lon"/>
          <tag name="throws" line="77" description="" type="\Parse\ParseException">
            <type>\Parse\ParseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lon</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVdtq20AQfd+vGEzAF3xJ31p8aaAkpZBCSB/rYNabka1U2hW7K7sh8b93NdLKkmzRpPTFsDNnZs6Zs1rPPifbhDHJYzQJFwh3XBucMjYZDBgM8uNXVHcqlBZGcI+JRoPSchsqCSoAnmOgBKn1Ewo7dtVZgyvX9RffIOQwCvHUbpUGgBtlhILvXCtrFcyCp/gqWI+FihcON2Ei4sY0KIRxEmHsCBhYUmb5TVrUkkfLaynUI19HyF4YAyAFkM3bce2o30SKW9jxKEUI3PjISbDpI44JNXG/iQ533CJc+NT0LW2U3LT28blpjdAXjVm6fXMAfmbCNY8hoJkZLbitsW4CnCW3Z/ik6ygUEKRSkGurlVDSWJ0K28uaDqmy75AvWQ1c2G1oRguD1k8jWH/azPpRParP0oea0Hu0qZYG7BZL4pXVZY1K9TXZmgpzWa0yNhV+R/JFacGy6mSd2w+07+eVbztbRjVqt1rti4t6/VtgktFrpX2y1pJ6GABFYAGfLseX8Pqaez6DUXbuFzAAGggS942ZvU6pJk6NhTXCPnRqJGgu3Tf4k/oMqftDp/DzUHXV7wvmNPovlnr//6+n5a1qNfX4WbW6+i5q3tbCtX+2tf49NHx1mAV8+Fga687OWAq8wdkiD9A5SmvxmFoO81EPnaLwrNllpznxOV0nPakI7nF2L7ESobsdO/dwac2fnSfVv4IzThOsCIUbqTS2v0hIg04dpx5efHe1ss8JdmG+gK43sjv0WX93Kd+4z0eQ11xD+SArV3VgB/YHYxkcwg==</source>
  </file>
  <file path="ParseObject.php" generated-path="ParseObject.html" hash="20ddf28b8b4fc3ce7606d500a47b587b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="25" package="Parse">
      <extends/>
      <implements>\Parse\Internal\Encodable</implements>
      <name>ParseObject</name>
      <full_name>\Parse\ParseObject</full_name>
      <docblock line="25">
        <description>ParseObject - Representation of an object stored on Parse.</description>
        <long-description></long-description>
        <tag name="package" line="25" description="Parse"/>
        <tag name="author" line="25" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="82" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseObject::__construct()</full_name>
        <docblock line="82">
          <description>Create a Parse Object</description>
          <long-description>Creates a pointer object if an objectId is provided,
otherwise creates a new object.</long-description>
          <tag name="param" line="82" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="82" description="&lt;p&gt;Object Id for Existing object.&lt;/p&gt;" type="mixed" variable="$objectId">
            <type>mixed</type>
          </tag>
          <tag name="param" line="82" description="" type="boolean" variable="$isPointer">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="82" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="164" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseObject::get()</full_name>
        <docblock line="164">
          <description>Get current value for an object property.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="&lt;p&gt;Key to retrieve from the estimatedData array.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="164" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="164" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="183" package="Parse">
        <name>has</name>
        <full_name>\Parse\ParseObject::has()</full_name>
        <docblock line="183">
          <description>Check if the object has a given key</description>
          <long-description></long-description>
          <tag name="param" line="183" description="&lt;p&gt;Key to check&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="183" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="195" package="Parse">
        <name>isKeyDirty</name>
        <full_name>\Parse\ParseObject::isKeyDirty()</full_name>
        <docblock line="195">
          <description>Check if the a value associated with a key has been
added/updated/removed and not saved yet.</description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="195" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="205" package="Parse">
        <name>isDirty</name>
        <full_name>\Parse\ParseObject::isDirty()</full_name>
        <docblock line="205">
          <description>Check if the object or any of its child objects have unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="205" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="248" package="Parse">
        <name>set</name>
        <full_name>\Parse\ParseObject::set()</full_name>
        <docblock line="248">
          <description>Validate and set a value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="248" description="&lt;p&gt;Key to set a value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="248" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="248" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="248" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="270" package="Parse">
        <name>setArray</name>
        <full_name>\Parse\ParseObject::setArray()</full_name>
        <docblock line="270">
          <description>Set an array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="270" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="270" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="270" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="292" package="Parse">
        <name>setAssociativeArray</name>
        <full_name>\Parse\ParseObject::setAssociativeArray()</full_name>
        <docblock line="292">
          <description>Set an associative array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="292" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="292" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="292" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="292" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="314" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseObject::remove()</full_name>
        <docblock line="314">
          <description>Remove a value from an array for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="314" description="&lt;p&gt;Key to remove the value from on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="314" description="&lt;p&gt;Value to remove from the array.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="314" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="314" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="330" package="Parse">
        <name>revert</name>
        <full_name>\Parse\ParseObject::revert()</full_name>
        <docblock line="330">
          <description>Revert all unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="330" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="342" package="Parse">
        <name>clear</name>
        <full_name>\Parse\ParseObject::clear()</full_name>
        <docblock line="342">
          <description>Clear all keys on this object by creating delete operations
for each key.</description>
          <long-description></long-description>
          <tag name="return" line="342" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="386" package="Parse">
        <name>getClassName</name>
        <full_name>\Parse\ParseObject::getClassName()</full_name>
        <docblock line="386">
          <description>Get the Parse Class Name for the object.</description>
          <long-description></long-description>
          <tag name="return" line="386" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="396" package="Parse">
        <name>getObjectId</name>
        <full_name>\Parse\ParseObject::getObjectId()</full_name>
        <docblock line="396">
          <description>Get the objectId for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="396" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="406" package="Parse">
        <name>getCreatedAt</name>
        <full_name>\Parse\ParseObject::getCreatedAt()</full_name>
        <docblock line="406">
          <description>Get the createdAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="406" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="416" package="Parse">
        <name>isDataAvailable</name>
        <full_name>\Parse\ParseObject::isDataAvailable()</full_name>
        <docblock line="416">
          <description>Returns true if the object has been fetched.</description>
          <long-description></long-description>
          <tag name="return" line="416" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="432" package="Parse">
        <name>getUpdatedAt</name>
        <full_name>\Parse\ParseObject::getUpdatedAt()</full_name>
        <docblock line="432">
          <description>Get the updatedAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="432" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="447" package="Parse">
        <name>create</name>
        <full_name>\Parse\ParseObject::create()</full_name>
        <docblock line="447">
          <description>Static method which returns a new Parse Object for a given class</description>
          <long-description>Optionally creates a pointer object if the objectId is provided.</long-description>
          <tag name="param" line="447" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="447" description="&lt;p&gt;Unique identifier for existing object.&lt;/p&gt;" type="string" variable="$objectId">
            <type>string</type>
          </tag>
          <tag name="return" line="447" description="" type="Object">
            <type>Object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="464" package="Parse">
        <name>fetch</name>
        <full_name>\Parse\ParseObject::fetch()</full_name>
        <docblock line="464">
          <description>Fetch the whole object from the server and update the local object.</description>
          <long-description></long-description>
          <tag name="return" line="464" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="632" package="Parse">
        <name>destroy</name>
        <full_name>\Parse\ParseObject::destroy()</full_name>
        <docblock line="632">
          <description>Delete object.</description>
          <long-description></long-description>
          <tag name="return" line="632" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="655" package="Parse">
        <name>destroyAll</name>
        <full_name>\Parse\ParseObject::destroyAll()</full_name>
        <docblock line="655">
          <description>Delete an array of objects.</description>
          <long-description></long-description>
          <tag name="param" line="655" description="&lt;p&gt;Objects to destroy.&lt;/p&gt;" type="array" variable="$objects">
            <type>array</type>
          </tag>
          <tag name="param" line="655" description="&lt;p&gt;Whether to use the master key or not.&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="655" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objects</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="725" package="Parse">
        <name>increment</name>
        <full_name>\Parse\ParseObject::increment()</full_name>
        <docblock line="725">
          <description>Increment a numeric key by a certain value.</description>
          <long-description></long-description>
          <tag name="param" line="725" description="&lt;p&gt;Key for numeric value on object to increment.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="725" description="&lt;p&gt;Value to increment by.&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="725" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="738" package="Parse">
        <name>add</name>
        <full_name>\Parse\ParseObject::add()</full_name>
        <docblock line="738">
          <description>Add a value to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="738" description="&lt;p&gt;Key for array value on object to add a value to.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="738" description="&lt;p&gt;Value to add.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="738" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="751" package="Parse">
        <name>addUnique</name>
        <full_name>\Parse\ParseObject::addUnique()</full_name>
        <docblock line="751">
          <description>Add unique values to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="751" description="&lt;p&gt;Key for array value on object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="751" description="&lt;p&gt;Value list to add uniquely.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="751" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="763" package="Parse">
        <name>delete</name>
        <full_name>\Parse\ParseObject::delete()</full_name>
        <docblock line="763">
          <description>Delete a key from an object.</description>
          <long-description></long-description>
          <tag name="param" line="763" description="&lt;p&gt;Key to remove from object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="763" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="823" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseObject::save()</full_name>
        <docblock line="823">
          <description>Save Object to Parse</description>
          <long-description></long-description>
          <tag name="return" line="823" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="838" package="Parse">
        <name>saveAll</name>
        <full_name>\Parse\ParseObject::saveAll()</full_name>
        <docblock line="838">
          <description>Save all the objects in the provided array</description>
          <long-description></long-description>
          <tag name="param" line="838" description="" type="array" variable="$list">
            <type>array</type>
          </tag>
          <tag name="return" line="838" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$list</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1076" package="Parse">
        <name>getRelation</name>
        <full_name>\Parse\ParseObject::getRelation()</full_name>
        <docblock line="1076">
          <description>Access or create a Relation value for a key.</description>
          <long-description></long-description>
          <tag name="param" line="1076" description="&lt;p&gt;The key to access the relation for.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1076" description="The ParseRelation object if the relation already&#10;                      exists for the key or can be created for this key." type="\Parse\ParseRelation">
            <type>\Parse\ParseRelation</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1112" package="Parse">
        <name>setACL</name>
        <full_name>\Parse\ParseObject::setACL()</full_name>
        <docblock line="1112">
          <description>Set ACL for this object.</description>
          <long-description></long-description>
          <tag name="param" line="1112" description="" type="\Parse\ParseACL" variable="$acl">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Parse\ParseACL</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1122" package="Parse">
        <name>getACL</name>
        <full_name>\Parse\ParseObject::getACL()</full_name>
        <docblock line="1122">
          <description>Get ACL assigned to the object.</description>
          <long-description></long-description>
          <tag name="return" line="1122" description="" type="\Parse\ParseACL">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1144" package="Parse">
        <name>registerSubclass</name>
        <full_name>\Parse\ParseObject::registerSubclass()</full_name>
        <docblock line="1144">
          <description>Register a subclass.  Should be called before any other Parse functions.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="throws" line="1144" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1177" package="Parse">
        <name>query</name>
        <full_name>\Parse\ParseObject::query()</full_name>
        <docblock line="1177">
          <description>Creates a ParseQuery for the subclass of ParseObject.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="return" line="1177" description="" type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="throws" line="1177" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="ParsePush.php" generated-path="ParsePush.html" hash="d257d7870bfe362b6fc5d9439c5abe19" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends/>
      <name>ParsePush</name>
      <full_name>\Parse\ParsePush</full_name>
      <docblock line="11">
        <description>ParsePush - Handles sending push notifications with Parse</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="32" package="Parse">
        <name>send</name>
        <full_name>\Parse\ParsePush::send()</full_name>
        <docblock line="32">
          <description>Sends a push notification.</description>
          <long-description></long-description>
          <tag name="param" line="32" description="&lt;p&gt;The data of the push notification.  Valid fields&#10;are:&lt;/p&gt;&#10;&lt;pre&gt;&lt;code&gt;channels - An Array of channels to push to.&#10;push_time - A Date object for when to send the push.&#10;expiration_time -  A Date object for when to expire&#10;    the push.&#10;expiration_interval - The seconds from now to expire the push.&#10;where - A ParseQuery over ParseInstallation that is used to match&#10;    a set of installations to push to.&#10;data - The data to send as part of the push&lt;/code&gt;&lt;/pre&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="32" description="&lt;p&gt;Whether to use the Master Key for the request&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="32" description="ParseException" type="\Exception,">
            <type>\Exception,</type>
          </tag>
          <tag name="return" line="32" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyNVE1P3DAQvftXzAGRXbTsqlcKFPqlVhWCClQOgJDXmRDTxE5thwUh/nvHzvcGtt3L2uOZ5zdvnrP/oUgLxhTP0RZcIJxxY/E9Y4udHQY71fastCnswjeu4gwtWFSxVHdQ+LDSTiZScCe1srCSLq1qqNjXHxHob36H0EbhiJcu1QYAvmorNJxwo53TsJ/c50fJci50fkh5CyYybm3HgD0zBhB4AcGcEwsLfMxiHs6rJLre8By4MfwJtmLuOFykCGGhE3C0HtcD/OKZjCGRmMW2AgLCwL1mDSBSrhRmlmQ5VnAc8AmwDVM/AdjpeVfkI7dO5uir4DN3CHp5j8JBQnqsUlS+zsvbMutV42MhTWDYYGwACcnYFfvfZkypHJoHnhGul8ii0F7gxOic5Fl1oK/h0LWm6iqM62eJhvR4QFPtvyvreJaFi6icO5AWSouxR825E+mQKafrnddT9grfEDXMcrcba6Mgt0DDd/0xDzyx1DpDrmCLeJxwS83/wCe4TJGyjUeheKisDsGfeoV9yOCfEq3rG82lRq8sXH95FFh4urOq9XZf5xl0pVGQy0eMQ2jBvDGWmRRAvTr6S0olglK+j0lw7WyN5gEkPLM4pdpnjwIygYm0pFqVfxWtuSW6mbJK2+1teCuxsQAlT2tc7xpqDBSuer1NWDOp6KOmF79uTfpQvGotwdV15GDp7eXmUY0yfR8WL683Eqw1YORThoeVT5RAGnZnwK4CYC3/YC2we3h7h+40NGcnNSGiBPSWsQezWQyS4zI8hOAw9K7xjgmMIHxE89KG9r0pnwrskY1alO72TbK035KBNONDajVc8imTqNze3i0qoWOcrCvTK5lV5mqmcxVJq6ObjUMau23EaZTyv8xGhf/mVz+yIXz9aBv86Oz0/CKaNbvFu4WXoA2oMsua9b2lu2t2gdS0ORm8StZO74Wxl781lz8g</source>
  </file>
  <file path="ParseAggregateException.php" generated-path="ParseAggregateException.html" hash="d7da74477b30e0c87669df26fe266422" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends>\Parse\ParseException</extends>
      <name>ParseAggregateException</name>
      <full_name>\Parse\ParseAggregateException</full_name>
      <docblock line="11">
        <description>ParseAggregateException - Multiple error condition</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
        <tag name="inherited_from" description="\Parse\ParseException" refers="\Parse\ParseException" link="/classes/Parse.ParseException.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="23" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseAggregateException::__construct()</full_name>
        <docblock line="23">
          <description>Constructs a Parse\ParseAggregateException</description>
          <long-description></long-description>
          <tag name="param" line="23" description="&lt;p&gt;Message for the Exception.&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;Collection of error values.&lt;/p&gt;" type="array" variable="$errors">
            <type>array</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;Previous exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
          <tag name="inherited_from" description="\Parse\ParseException::__construct()" refers="\Parse\ParseException::__construct()" link="/classes/Parse.ParseException.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errors</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="34" package="Parse">
        <name>getErrors</name>
        <full_name>\Parse\ParseAggregateException::getErrors()</full_name>
        <docblock line="34">
          <description>Return the aggregated errors that were thrown.</description>
          <long-description></long-description>
          <tag name="return" line="34" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="21" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseException::__construct()</full_name>
        <docblock line="21">
          <description>Constructs a Parse\Exception</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;Message for the Exception.&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="21" description="&lt;p&gt;Error code.&lt;/p&gt;" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="21" description="&lt;p&gt;Previous Exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx1kctuwjAQRff+illkAag8Vl3wKhWiO6SqayRkzCRx69iRH0CF+Pc6dhKIVLKa2HPu3Duev5V5SYikBZqSMoRPqg3OCBkPBgQG8fc9yzRm1OLmwrC0XEkYwtYJy0uBgForDUzJI6+uPFWBK6/2QzOEKBGOqLO5bwX4UIYp2FKtrFUwT7+LVXoYMVUsfd+YMEGNeToaLxblsb5vj8mVEIBS85NvhiSYMrPqLCQBP3+tpLHaMWuARnr3ZEboj5DPoWkBHuQyg+pL/KpMSLati9SHsjlCy486LNWa/kJkoy9frZUQyEIgldY7PFHh0HTh3T14Umo8ceV89KbA7sRxtQJ3EJxB6mRU3+9Zk7vXWH9pjSyiu17/5UF+AdIJ0fdi10oWvBOUdjr9X+p1MnmA+7OAJDbnZrhsp7QPAnDrPMoXWqdlWB9t3uEINWdzauGMGn2l1blOWe9HRzL4f5o+Q7sJWr17nBrsWKyN3f4AOc/7uQ==</source>
  </file>
  <file path="ParseQuery.php" generated-path="ParseQuery.html" hash="6f3f21bf3296fa60cdaade06d4b70213" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends/>
      <name>ParseQuery</name>
      <full_name>\Parse\ParseQuery</full_name>
      <docblock line="11">
        <description>ParseQuery - Handles querying data from Parse</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="52" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseQuery::__construct()</full_name>
        <docblock line="52">
          <description>Create a Parse Query for a given Parse Class.</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;Class Name of data on Parse.&lt;/p&gt;" type="mixed" variable="$className">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="67" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseQuery::get()</full_name>
        <docblock line="67">
          <description>Execute a query to retrieve a specific object</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;Unique object id to retrieve.&lt;/p&gt;" type="string" variable="$objectId">
            <type>string</type>
          </tag>
          <tag name="param" line="67" description="&lt;p&gt;If the query should use the master key&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="67" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="67" description="" type="\Parse\ParseException">
            <type>\Parse\ParseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="85" package="Parse">
        <name>equalTo</name>
        <full_name>\Parse\ParseQuery::equalTo()</full_name>
        <docblock line="85">
          <description>Set a constraint for a field matching a given value.</description>
          <long-description></long-description>
          <tag name="param" line="85" description="&lt;p&gt;Key to set up an equals constraint.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="85" description="&lt;p&gt;Value the key must equal.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="85" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="115" package="Parse">
        <name>notEqualTo</name>
        <full_name>\Parse\ParseQuery::notEqualTo()</full_name>
        <docblock line="115">
          <description>Add a constraint to the query that requires a particular key's value to
be not equal to the provided value.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="115" description="&lt;p&gt;The value that must not be equalled.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="115" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="130" package="Parse">
        <name>lessThan</name>
        <full_name>\Parse\ParseQuery::lessThan()</full_name>
        <docblock line="130">
          <description>Add a constraint to the query that requires a particular key's value to
be less than the provided value.</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;The value that provides an Upper bound.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="130" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="145" package="Parse">
        <name>greaterThan</name>
        <full_name>\Parse\ParseQuery::greaterThan()</full_name>
        <docblock line="145">
          <description>Add a constraint to the query that requires a particular key's value to
be greater than the provided value.</description>
          <long-description></long-description>
          <tag name="param" line="145" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="145" description="&lt;p&gt;The value that provides an Lower bound.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="145" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="160" package="Parse">
        <name>greaterThanOrEqualTo</name>
        <full_name>\Parse\ParseQuery::greaterThanOrEqualTo()</full_name>
        <docblock line="160">
          <description>Add a constraint to the query that requires a particular key's value to
be greater than or equal to the provided value.</description>
          <long-description></long-description>
          <tag name="param" line="160" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="160" description="&lt;p&gt;The value that provides an Lower bound.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="160" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="175" package="Parse">
        <name>lessThanOrEqualTo</name>
        <full_name>\Parse\ParseQuery::lessThanOrEqualTo()</full_name>
        <docblock line="175">
          <description>Add a constraint to the query that requires a particular key's value to
be less than or equal to the provided value.</description>
          <long-description></long-description>
          <tag name="param" line="175" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;The value that provides an Upper bound.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="175" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="199" package="Parse">
        <name>startsWith</name>
        <full_name>\Parse\ParseQuery::startsWith()</full_name>
        <docblock line="199">
          <description>Add a constraint to the query that requires a particular key's value to
start with the provided value.</description>
          <long-description></long-description>
          <tag name="param" line="199" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="199" description="&lt;p&gt;The substring that the value must start with.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="199" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="245" package="Parse">
        <name>first</name>
        <full_name>\Parse\ParseQuery::first()</full_name>
        <docblock line="245">
          <description>Execute a query to get only the first result.</description>
          <long-description></long-description>
          <tag name="param" line="245" description="&lt;p&gt;If the query should use the master key&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="245" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="278" package="Parse">
        <name>count</name>
        <full_name>\Parse\ParseQuery::count()</full_name>
        <docblock line="278">
          <description>Execute a count query and return the count.</description>
          <long-description></long-description>
          <tag name="param" line="278" description="&lt;p&gt;If the query should use the master key&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="278" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="296" package="Parse">
        <name>find</name>
        <full_name>\Parse\ParseQuery::find()</full_name>
        <docblock line="296">
          <description>Execute a find query and return the results.</description>
          <long-description></long-description>
          <tag name="param" line="296" description="" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="296" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="322" package="Parse">
        <name>skip</name>
        <full_name>\Parse\ParseQuery::skip()</full_name>
        <docblock line="322">
          <description>Set the skip parameter as a query constraint.</description>
          <long-description></long-description>
          <tag name="param" line="322" description="&lt;p&gt;Number of objects to skip from start of results.&lt;/p&gt;" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="322" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="335" package="Parse">
        <name>limit</name>
        <full_name>\Parse\ParseQuery::limit()</full_name>
        <docblock line="335">
          <description>Set the limit parameter as a query constraint</description>
          <long-description></long-description>
          <tag name="param" line="335" description="&lt;p&gt;Number of objects to return from the query.&lt;/p&gt;" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="335" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="348" package="Parse">
        <name>ascending</name>
        <full_name>\Parse\ParseQuery::ascending()</full_name>
        <docblock line="348">
          <description>Set the query orderBy to ascending for the given key(s). It overwrites the
existing order criteria.</description>
          <long-description></long-description>
          <tag name="param" line="348" description="&lt;p&gt;Key(s) to sort by, which is a string or an array of strings.&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="348" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="362" package="Parse">
        <name>addAscending</name>
        <full_name>\Parse\ParseQuery::addAscending()</full_name>
        <docblock line="362">
          <description>Set the query orderBy to ascending for the given key(s). It can also add
secondary sort descriptors without overwriting the existing order.</description>
          <long-description></long-description>
          <tag name="param" line="362" description="&lt;p&gt;Key(s) to sort by, which is a string or an array of strings.&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="362" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="379" package="Parse">
        <name>descending</name>
        <full_name>\Parse\ParseQuery::descending()</full_name>
        <docblock line="379">
          <description>Set the query orderBy to descending for a given key(s). It overwrites the
existing order criteria.</description>
          <long-description></long-description>
          <tag name="param" line="379" description="&lt;p&gt;Key(s) to sort by, which is a string or an array of strings.&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="379" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="393" package="Parse">
        <name>addDescending</name>
        <full_name>\Parse\ParseQuery::addDescending()</full_name>
        <docblock line="393">
          <description>Set the query orderBy to descending for a given key(s). It can also add
secondary sort descriptors without overwriting the existing order.</description>
          <long-description></long-description>
          <tag name="param" line="393" description="&lt;p&gt;Key(s) to sort by, which is a string or an array of strings.&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="393" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="415" package="Parse">
        <name>near</name>
        <full_name>\Parse\ParseQuery::near()</full_name>
        <docblock line="415">
          <description>Add a proximity based constraint for finding objects with key point
values near the point given.</description>
          <long-description></long-description>
          <tag name="param" line="415" description="&lt;p&gt;The key that the ParseGeoPoint is stored in.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="415" description="&lt;p&gt;The reference ParseGeoPoint that is used.&lt;/p&gt;" type="\Parse\ParseGeoPoint" variable="$point">
            <type>\Parse\ParseGeoPoint</type>
          </tag>
          <tag name="return" line="415" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Parse\ParseGeoPoint</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="431" package="Parse">
        <name>withinRadians</name>
        <full_name>\Parse\ParseQuery::withinRadians()</full_name>
        <docblock line="431">
          <description>Add a proximity based constraint for finding objects with key point
values near the point given and within the maximum distance given.</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;The key of the ParseGeoPoint&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;The ParseGeoPoint that is used.&lt;/p&gt;" type="\Parse\ParseGeoPoint" variable="$point">
            <type>\Parse\ParseGeoPoint</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Maximum distance (in radians)&lt;/p&gt;" type="integer" variable="$maxDistance">
            <type>integer</type>
          </tag>
          <tag name="return" line="431" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Parse\ParseGeoPoint</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$maxDistance</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="449" package="Parse">
        <name>withinMiles</name>
        <full_name>\Parse\ParseQuery::withinMiles()</full_name>
        <docblock line="449">
          <description>Add a proximity based constraint for finding objects with key point
values near the point given and within the maximum distance given.</description>
          <long-description>Radius of earth used is 3958.5 miles.</long-description>
          <tag name="param" line="449" description="&lt;p&gt;The key of the ParseGeoPoint&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="449" description="&lt;p&gt;The ParseGeoPoint that is used.&lt;/p&gt;" type="\Parse\ParseGeoPoint" variable="$point">
            <type>\Parse\ParseGeoPoint</type>
          </tag>
          <tag name="param" line="449" description="&lt;p&gt;Maximum distance (in miles)&lt;/p&gt;" type="integer" variable="$maxDistance">
            <type>integer</type>
          </tag>
          <tag name="return" line="449" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Parse\ParseGeoPoint</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$maxDistance</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="467" package="Parse">
        <name>withinKilometers</name>
        <full_name>\Parse\ParseQuery::withinKilometers()</full_name>
        <docblock line="467">
          <description>Add a proximity based constraint for finding objects with key point
values near the point given and within the maximum distance given.</description>
          <long-description>Radius of earth used is 6371.0 kilometers.</long-description>
          <tag name="param" line="467" description="&lt;p&gt;The key of the ParseGeoPoint&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="467" description="&lt;p&gt;The ParseGeoPoint that is used.&lt;/p&gt;" type="\Parse\ParseGeoPoint" variable="$point">
            <type>\Parse\ParseGeoPoint</type>
          </tag>
          <tag name="param" line="467" description="&lt;p&gt;Maximum distance (in kilometers)&lt;/p&gt;" type="integer" variable="$maxDistance">
            <type>integer</type>
          </tag>
          <tag name="return" line="467" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Parse\ParseGeoPoint</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$maxDistance</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="485" package="Parse">
        <name>withinGeoBox</name>
        <full_name>\Parse\ParseQuery::withinGeoBox()</full_name>
        <docblock line="485">
          <description>Add a constraint to the query that requires a particular key's
coordinates be contained within a given rectangular geographic bounding
box.</description>
          <long-description></long-description>
          <tag name="param" line="485" description="&lt;p&gt;The key of the ParseGeoPoint&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="485" description="&lt;p&gt;The lower-left corner of the box.&lt;/p&gt;" type="\Parse\ParseGeoPoint" variable="$southwest">
            <type>\Parse\ParseGeoPoint</type>
          </tag>
          <tag name="param" line="485" description="&lt;p&gt;The upper-right corner of the box.&lt;/p&gt;" type="\Parse\ParseGeoPoint" variable="$northeast">
            <type>\Parse\ParseGeoPoint</type>
          </tag>
          <tag name="return" line="485" description="Returns this query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$southwest</name>
          <default></default>
          <type>\Parse\ParseGeoPoint</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$northeast</name>
          <default></default>
          <type>\Parse\ParseGeoPoint</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="501" package="Parse">
        <name>containedIn</name>
        <full_name>\Parse\ParseQuery::containedIn()</full_name>
        <docblock line="501">
          <description>Add a constraint to the query that requires a particular key's value to
be contained in the provided list of values.</description>
          <long-description></long-description>
          <tag name="param" line="501" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="501" description="&lt;p&gt;The values that will match.&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="501" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="519" package="Parse">
        <name>each</name>
        <full_name>\Parse\ParseQuery::each()</full_name>
        <docblock line="519">
          <description>Iterates over each result of a query, calling a callback for each one. The
items are processed in an unspecified order. The query may not have any
sort order, and may not use limit or skip.</description>
          <long-description></long-description>
          <tag name="param" line="519" description="&lt;p&gt;Callback that will be called with each result&#10;                           of the query.&lt;/p&gt;" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="param" line="519" description="" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="param" line="519" description="" type="integer" variable="$batchSize">
            <type>integer</type>
          </tag>
          <tag name="throws" line="519" description="If query has sort, skip, or limit." type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>callable</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$batchSize</name>
          <default>100</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="555" package="Parse">
        <name>notContainedIn</name>
        <full_name>\Parse\ParseQuery::notContainedIn()</full_name>
        <docblock line="555">
          <description>Add a constraint to the query that requires a particular key's value to
not be contained in the provided list of values.</description>
          <long-description></long-description>
          <tag name="param" line="555" description="&lt;p&gt;The key to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="555" description="&lt;p&gt;The values that will not match.&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="555" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="571" package="Parse">
        <name>matchesQuery</name>
        <full_name>\Parse\ParseQuery::matchesQuery()</full_name>
        <docblock line="571">
          <description>Add a constraint that requires that a key's value matches a ParseQuery
constraint.</description>
          <long-description></long-description>
          <tag name="param" line="571" description="&lt;p&gt;The key that the contains the object to match&#10;                         the query.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="571" description="&lt;p&gt;The query that should match.&lt;/p&gt;" type="\Parse\ParseQuery" variable="$query">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="return" line="571" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>\Parse\ParseQuery</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="589" package="Parse">
        <name>doesNotMatchQuery</name>
        <full_name>\Parse\ParseQuery::doesNotMatchQuery()</full_name>
        <docblock line="589">
          <description>Add a constraint that requires that a key's value not matches a ParseQuery
constraint.</description>
          <long-description></long-description>
          <tag name="param" line="589" description="&lt;p&gt;The key that the contains the object not to&#10;                         match the query.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="589" description="&lt;p&gt;The query that should not match.&lt;/p&gt;" type="\Parse\ParseQuery" variable="$query">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="return" line="589" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>\Parse\ParseQuery</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="609" package="Parse">
        <name>matchesKeyInQuery</name>
        <full_name>\Parse\ParseQuery::matchesKeyInQuery()</full_name>
        <docblock line="609">
          <description>Add a constraint that requires that a key's value matches a value in an
object returned by the given query.</description>
          <long-description></long-description>
          <tag name="param" line="609" description="&lt;p&gt;The key that contains teh value that is being&#10;                            matched.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="609" description="&lt;p&gt;The key in objects returned by the query to&#10;                            match against.&lt;/p&gt;" type="string" variable="$queryKey">
            <type>string</type>
          </tag>
          <tag name="param" line="609" description="&lt;p&gt;The query to run.&lt;/p&gt;" type="\Parse\ParseQuery" variable="$query">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="return" line="609" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$queryKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>\Parse\ParseQuery</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="630" package="Parse">
        <name>doesNotMatchKeyInQuery</name>
        <full_name>\Parse\ParseQuery::doesNotMatchKeyInQuery()</full_name>
        <docblock line="630">
          <description>Add a constraint that requires that a key's value not match a value in an
object returned by the given query.</description>
          <long-description></long-description>
          <tag name="param" line="630" description="&lt;p&gt;The key that contains teh value that is being&#10;                            excluded.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="630" description="&lt;p&gt;The key in objects returned by the query to&#10;                            match against.&lt;/p&gt;" type="string" variable="$queryKey">
            <type>string</type>
          </tag>
          <tag name="param" line="630" description="&lt;p&gt;The query to run.&lt;/p&gt;" type="\Parse\ParseQuery" variable="$query">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="return" line="630" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$queryKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>\Parse\ParseQuery</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="649" package="Parse">
        <name>orQueries</name>
        <full_name>\Parse\ParseQuery::orQueries()</full_name>
        <docblock line="649">
          <description>Constructs a ParseQuery object that is the OR of the passed in queries objects.</description>
          <long-description>All queries must have same class name.</long-description>
          <tag name="param" line="649" description="&lt;p&gt;Array of ParseQuery objects to OR.&lt;/p&gt;" type="array" variable="$queryObjects">
            <type>array</type>
          </tag>
          <tag name="return" line="649" description="The query that is the OR of the passed in queries." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="throws" line="649" description="If all queries don't have same class." type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$queryObjects</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="693" package="Parse">
        <name>containsAll</name>
        <full_name>\Parse\ParseQuery::containsAll()</full_name>
        <docblock line="693">
          <description>Add a constraint to the query that requires a particular key's value to
contain each one of the provided list of values.</description>
          <long-description></long-description>
          <tag name="param" line="693" description="&lt;p&gt;The key to check. This key's value must be an array.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="693" description="&lt;p&gt;The values that will match.&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="693" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="706" package="Parse">
        <name>exists</name>
        <full_name>\Parse\ParseQuery::exists()</full_name>
        <docblock line="706">
          <description>Add a constraint for finding objects that contain the given key.</description>
          <long-description></long-description>
          <tag name="param" line="706" description="&lt;p&gt;The key that should exist.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="706" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="719" package="Parse">
        <name>doesNotExist</name>
        <full_name>\Parse\ParseQuery::doesNotExist()</full_name>
        <docblock line="719">
          <description>Add a constraint for finding objects that not contain the given key.</description>
          <long-description></long-description>
          <tag name="param" line="719" description="&lt;p&gt;The key that should not exist.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="719" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="735" package="Parse">
        <name>select</name>
        <full_name>\Parse\ParseQuery::select()</full_name>
        <docblock line="735">
          <description>Restrict the fields of the returned Parse Objects to include only the
provided keys. If this is called multiple times, then all of the keys
specified in each of the calls will be included.</description>
          <long-description></long-description>
          <tag name="param" line="735" description="&lt;p&gt;The name(s) of the key(s) to include. It could be&lt;/p&gt;&#10;&lt;pre&gt;&lt;code&gt;              string, or an Array of string.&lt;/code&gt;&lt;/pre&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="735" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="754" package="Parse">
        <name>includeKey</name>
        <full_name>\Parse\ParseQuery::includeKey()</full_name>
        <docblock line="754">
          <description>Include nested Parse Objects for the provided key.  You can use dot
notation to specify which fields in the included object are also fetch.</description>
          <long-description></long-description>
          <tag name="param" line="754" description="&lt;p&gt;The name(s) of the key(s) to include. It could be&lt;/p&gt;&#10;&lt;pre&gt;&lt;code&gt;               string, or an Array of string.&lt;/code&gt;&lt;/pre&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="754" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="770" package="Parse">
        <name>relatedTo</name>
        <full_name>\Parse\ParseQuery::relatedTo()</full_name>
        <docblock line="770">
          <description>Add constraint for parse relation.</description>
          <long-description></long-description>
          <tag name="param" line="770" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="770" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="770" description="Returns the query, so you can chain this call." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="ParseMemoryStorage.php" generated-path="ParseMemoryStorage.html" hash="7e5d8766842c0cc55ae6dc1061411bec" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="12" package="Parse">
      <extends/>
      <implements>\Parse\ParseStorageInterface</implements>
      <name>ParseMemoryStorage</name>
      <full_name>\Parse\ParseMemoryStorage</full_name>
      <docblock line="12">
        <description>ParseMemoryStorage - Uses non-persisted memory for storage.</description>
        <long-description>This is used by default if a PHP Session is not active.</long-description>
        <tag name="package" line="12" description="Parse"/>
        <tag name="author" line="12" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="20" package="Parse">
        <name>set</name>
        <full_name>\Parse\ParseMemoryStorage::set()</full_name>
        <docblock line="20">
          <description>Sets a key-value pair in storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::set()" refers="\Parse\ParseStorageInterface::set()" link="/classes/Parse.ParseStorageInterface.html#method_set"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="25" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseMemoryStorage::remove()</full_name>
        <docblock line="25">
          <description>Remove a key from storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::remove()" refers="\Parse\ParseStorageInterface::remove()" link="/classes/Parse.ParseStorageInterface.html#method_remove"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="30" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseMemoryStorage::get()</full_name>
        <docblock line="30">
          <description>Gets the value for a key from storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::get()" refers="\Parse\ParseStorageInterface::get()" link="/classes/Parse.ParseStorageInterface.html#method_get"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="38" package="Parse">
        <name>clear</name>
        <full_name>\Parse\ParseMemoryStorage::clear()</full_name>
        <docblock line="38">
          <description>Clear all the values in storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::clear()" refers="\Parse\ParseStorageInterface::clear()" link="/classes/Parse.ParseStorageInterface.html#method_clear"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="43" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseMemoryStorage::save()</full_name>
        <docblock line="43">
          <description>Save the data, if necessary.  This would be a no-op when using the
$_SESSION implementation, but could be used for saving to file or
database as an action instead of on every set.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::save()" refers="\Parse\ParseStorageInterface::save()" link="/classes/Parse.ParseStorageInterface.html#method_save"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="49" package="Parse">
        <name>getKeys</name>
        <full_name>\Parse\ParseMemoryStorage::getKeys()</full_name>
        <docblock line="49">
          <description>Get all keys in storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::getKeys()" refers="\Parse\ParseStorageInterface::getKeys()" link="/classes/Parse.ParseStorageInterface.html#method_getKeys"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="54" package="Parse">
        <name>getAll</name>
        <full_name>\Parse\ParseMemoryStorage::getAll()</full_name>
        <docblock line="54">
          <description>Get all key-value pairs from storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::getAll()" refers="\Parse\ParseStorageInterface::getAll()" link="/classes/Parse.ParseStorageInterface.html#method_getAll"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="20" code="PPC:ERR-50008">No summary for method set()</error>
      <error line="25" code="PPC:ERR-50008">No summary for method remove()</error>
      <error line="30" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="38" code="PPC:ERR-50008">No summary for method clear()</error>
      <error line="43" code="PPC:ERR-50008">No summary for method save()</error>
      <error line="49" code="PPC:ERR-50008">No summary for method getKeys()</error>
      <error line="54" code="PPC:ERR-50008">No summary for method getAll()</error>
    </parse_markers>
    <source>eJx9kt1q4zAQhe/1FHORiyQ08QOk25+bZZfSEmj3qpQyccaNNrLkaiSDKXn3jmRDUhoXjEHSOZ/OHPvyutk1SlmsiRssCdbomVZKFfO5gnm/vKfa+e4xOI9vBAv4x8RgnV005FlzoC3UWQKV88C9bpnsTzvNIE9k0Ww62FKF0QTQFSCs/6zhkZi1s0ljXQAsg26zNblvJNE+XdnHyFsYw04uAfjtuHRwj96F4OCy+l/fVJtl6eor0RWqNMh8Lr6uG0M12TCcDvt/bSBfSQPqQymAPD6kC1v0gN5jl9eFvBuvWwwEk2FS+NULprNVsjZxY3QJVbQyjIzGFKaTPXUXMGnRRJqJ5iPBYBKknsXVgHlOoheB9bKVSA7neF7GaSkjj6ho8zVngLNR0NsQ7EiRzzLVPEqaDTKQDCF6e3aAVZYc1InMRmNGU5SG0E/HSjntdgTAKG0c/UUBDy7/SLmr96g9bZcncX7q4446PmEN+XOC1306+5rux25vjfmO+uof7IdP3QEaPw==</source>
  </file>
  <file path="ParseCloud.php" generated-path="ParseCloud.html" hash="ce746752f78e3ed744952833205c4ae7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends/>
      <name>ParseCloud</name>
      <full_name>\Parse\ParseCloud</full_name>
      <docblock line="11">
        <description>ParseCloud - Facilitates calling Parse Cloud functions</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="23" package="Parse">
        <name>run</name>
        <full_name>\Parse\ParseCloud::run()</full_name>
        <docblock line="23">
          <description>Makes a call to a Cloud function</description>
          <long-description></long-description>
          <tag name="param" line="23" description="&lt;p&gt;Cloud function name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;Parameters to pass&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;Whether to use the Master Key&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="23" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxdkU1LAzEQhu/5FXMobFtqF6/90ILgRYqCggcRmWan7dZssuYDLKX/3dlkV7q95GPmfWeeSRb39b4WQmNFrkZJ8ILW0VyIfDwWME7XB2VCATfwiLJUpUdPDiQqVepdEkBSbIOWvjTasbMxr7jiN+4IkiqGMPi9sQDwaJw0sEZrvDew2B6q1XYzlaa6Y10upELnLtqLkxAAkQq4zhq/GQIjBrAfrxCiKkmZwmIFztuGd9CMeiWGJtYTo7V4BBgU6LGB4Lwn65pONXP1tBtjFKGGQXC0Rse6JzrC+578nmzj4DjwGVISOHtJZ8kHq6Eqf6mIoZzXOmxUKZkZPW//nDboYRxg0qItE+lwNLlqv4QtKkcjrnVqqsLA8gfz1xCn2lctSfvZ7MvSTyDnh1EGkL08v75lk+6W3+b/35pnME0P2KV1UKo7H5zRX6SlKWjY79AGI/IkeVq8UWfu0cfYaB639nn6BQtKBbuZPjI+BeWzz+g6C3H+A5084Zo=</source>
  </file>
  <file path="ParseACL.php" generated-path="ParseACL.html" hash="1b1278ae7b80dc3bf86760f5d9ba613c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="18" package="Parse">
      <extends/>
      <implements>\Parse\Internal\Encodable</implements>
      <name>ParseACL</name>
      <full_name>\Parse\ParseACL</full_name>
      <docblock line="18">
        <description>ParseACL - is used to control which users can access or modify a particular
object. Each ParseObject can have its own ParseACL. You can grant read and
write permissions separately to specific users, to groups of users that
belong to roles, or you can grant permissions to "the public" so that, for
example, any user could read a particular object but only a particular set
of users could write to that object.</description>
        <long-description></long-description>
        <tag name="package" line="18" description="Parse"/>
        <tag name="author" line="18" description="Mohamed Madbouli" link="mailto:mohamedmadbouli@fb.com"/>
      </docblock>
      <constant namespace="Parse" line="23" package="Parse">
        <name>PUBLIC_KEY</name>
        <full_name>\Parse\ParseACL::PUBLIC_KEY</full_name>
        <value>'*'</value>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="56" package="Parse">
        <name>createACLWithUser</name>
        <full_name>\Parse\ParseACL::createACLWithUser()</full_name>
        <docblock line="56">
          <description>Create new ParseACL with read and write access for the given user.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="\Parse\ParseUser" variable="$user">
            <type>\Parse\ParseUser</type>
          </tag>
          <tag name="return" line="56" description="" type="\Parse\ParseACL">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>\Parse\ParseUser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="194" package="Parse">
        <name>setReadAccess</name>
        <full_name>\Parse\ParseACL::setReadAccess()</full_name>
        <docblock line="194">
          <description>Set whether the given user id is allowed to read this object.</description>
          <long-description></long-description>
          <tag name="param" line="194" description="&lt;p&gt;User id.&lt;/p&gt;" type="string" variable="$userId">
            <type>string</type>
          </tag>
          <tag name="param" line="194" description="&lt;p&gt;If user allowed to read or not.&lt;/p&gt;" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="194" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="214" package="Parse">
        <name>getReadAccess</name>
        <full_name>\Parse\ParseACL::getReadAccess()</full_name>
        <docblock line="214">
          <description>Get whether the given user id is *explicitly* allowed to read this
object. Even if this returns false, the user may still be able to
access it if getPublicReadAccess returns true or a role that the
user belongs to has read access.</description>
          <long-description></long-description>
          <tag name="param" line="214" description="&lt;p&gt;User id.&lt;/p&gt;" type="string" variable="$userId">
            <type>string</type>
          </tag>
          <tag name="return" line="214" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="214" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="230" package="Parse">
        <name>setWriteAccess</name>
        <full_name>\Parse\ParseACL::setWriteAccess()</full_name>
        <docblock line="230">
          <description>Set whether the given user id is allowed to write this object.</description>
          <long-description></long-description>
          <tag name="param" line="230" description="&lt;p&gt;User id.&lt;/p&gt;" type="string" variable="$userId">
            <type>string</type>
          </tag>
          <tag name="param" line="230" description="&lt;p&gt;If user allowed to write or not.&lt;/p&gt;" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="230" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="250" package="Parse">
        <name>getWriteAccess</name>
        <full_name>\Parse\ParseACL::getWriteAccess()</full_name>
        <docblock line="250">
          <description>Get whether the given user id is *explicitly* allowed to write this
object. Even if this returns false, the user may still be able to
access it if getPublicWriteAccess returns true or a role that the
user belongs to has write access.</description>
          <long-description></long-description>
          <tag name="param" line="250" description="&lt;p&gt;User id.&lt;/p&gt;" type="string" variable="$userId">
            <type>string</type>
          </tag>
          <tag name="return" line="250" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="250" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="264" package="Parse">
        <name>setPublicReadAccess</name>
        <full_name>\Parse\ParseACL::setPublicReadAccess()</full_name>
        <docblock line="264">
          <description>Set whether the public is allowed to read this object.</description>
          <long-description></long-description>
          <tag name="param" line="264" description="" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="274" package="Parse">
        <name>getPublicReadAccess</name>
        <full_name>\Parse\ParseACL::getPublicReadAccess()</full_name>
        <docblock line="274">
          <description>Get whether the public is allowed to read this object.</description>
          <long-description></long-description>
          <tag name="return" line="274" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="284" package="Parse">
        <name>setPublicWriteAccess</name>
        <full_name>\Parse\ParseACL::setPublicWriteAccess()</full_name>
        <docblock line="284">
          <description>Set whether the public is allowed to write this object.</description>
          <long-description></long-description>
          <tag name="param" line="284" description="" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="294" package="Parse">
        <name>getPublicWriteAccess</name>
        <full_name>\Parse\ParseACL::getPublicWriteAccess()</full_name>
        <docblock line="294">
          <description>Get whether the public is allowed to write this object.</description>
          <long-description></long-description>
          <tag name="return" line="294" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="307" package="Parse">
        <name>setUserReadAccess</name>
        <full_name>\Parse\ParseACL::setUserReadAccess()</full_name>
        <docblock line="307">
          <description>Set whether the given user is allowed to read this object.</description>
          <long-description></long-description>
          <tag name="param" line="307" description="" type="\Parse\ParseUser" variable="$user">
            <type>\Parse\ParseUser</type>
          </tag>
          <tag name="param" line="307" description="" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="307" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>\Parse\ParseUser</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="327" package="Parse">
        <name>getUserReadAccess</name>
        <full_name>\Parse\ParseACL::getUserReadAccess()</full_name>
        <docblock line="327">
          <description>Get whether the given user is *explicitly* allowed to read this object.</description>
          <long-description>Even if this returns false, the user may still be able to access it if
getPublicReadAccess returns true or a role that the user belongs to has
read access.</long-description>
          <tag name="param" line="327" description="" type="\Parse\ParseUser" variable="$user">
            <type>\Parse\ParseUser</type>
          </tag>
          <tag name="return" line="327" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="327" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>\Parse\ParseUser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="343" package="Parse">
        <name>setUserWriteAccess</name>
        <full_name>\Parse\ParseACL::setUserWriteAccess()</full_name>
        <docblock line="343">
          <description>Set whether the given user is allowed to write this object.</description>
          <long-description></long-description>
          <tag name="param" line="343" description="" type="\Parse\ParseUser" variable="$user">
            <type>\Parse\ParseUser</type>
          </tag>
          <tag name="param" line="343" description="" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="343" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>\Parse\ParseUser</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="363" package="Parse">
        <name>getUserWriteAccess</name>
        <full_name>\Parse\ParseACL::getUserWriteAccess()</full_name>
        <docblock line="363">
          <description>Get whether the given user is *explicitly* allowed to write this object.</description>
          <long-description>Even if this returns false, the user may still be able to access it if
getPublicWriteAccess returns true or a role that the user belongs to has
write access.</long-description>
          <tag name="param" line="363" description="" type="\Parse\ParseUser" variable="$user">
            <type>\Parse\ParseUser</type>
          </tag>
          <tag name="return" line="363" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="363" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>\Parse\ParseUser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="380" package="Parse">
        <name>getRoleReadAccessWithName</name>
        <full_name>\Parse\ParseACL::getRoleReadAccessWithName()</full_name>
        <docblock line="380">
          <description>Get whether users belonging to the role with the given roleName are
allowed to read this object. Even if this returns false, the role may
still be able to read it if a parent role has read access.</description>
          <long-description></long-description>
          <tag name="param" line="380" description="&lt;p&gt;The name of the role.&lt;/p&gt;" type="string" variable="$roleName">
            <type>string</type>
          </tag>
          <tag name="return" line="380" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$roleName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="393" package="Parse">
        <name>setRoleReadAccessWithName</name>
        <full_name>\Parse\ParseACL::setRoleReadAccessWithName()</full_name>
        <docblock line="393">
          <description>Set whether users belonging to the role with the given roleName
are allowed to read this object.</description>
          <long-description></long-description>
          <tag name="param" line="393" description="&lt;p&gt;The name of the role.&lt;/p&gt;" type="string" variable="$roleName">
            <type>string</type>
          </tag>
          <tag name="param" line="393" description="&lt;p&gt;Whether the given role can read this object.&lt;/p&gt;" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$roleName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="407" package="Parse">
        <name>getRoleWriteAccessWithName</name>
        <full_name>\Parse\ParseACL::getRoleWriteAccessWithName()</full_name>
        <docblock line="407">
          <description>Get whether users belonging to the role with the given roleName are
allowed to write this object. Even if this returns false, the role may
still be able to write it if a parent role has write access.</description>
          <long-description></long-description>
          <tag name="param" line="407" description="&lt;p&gt;The name of the role.&lt;/p&gt;" type="string" variable="$roleName">
            <type>string</type>
          </tag>
          <tag name="return" line="407" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$roleName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="419" package="Parse">
        <name>setRoleWriteAccessWithName</name>
        <full_name>\Parse\ParseACL::setRoleWriteAccessWithName()</full_name>
        <docblock line="419">
          <description>Set whether users belonging to the role with the given roleName
are allowed to write this object.</description>
          <long-description></long-description>
          <tag name="param" line="419" description="&lt;p&gt;The name of the role.&lt;/p&gt;" type="string" variable="$roleName">
            <type>string</type>
          </tag>
          <tag name="param" line="419" description="&lt;p&gt;Whether the given role can write this object.&lt;/p&gt;" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$roleName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="449" package="Parse">
        <name>getRoleReadAccess</name>
        <full_name>\Parse\ParseACL::getRoleReadAccess()</full_name>
        <docblock line="449">
          <description>Get whether users belonging to the given role are allowed to read this
object. Even if this returns false, the role may still be able to read
it if a parent role has read access. The role must already be saved on
the server and its data must have been fetched in order to use this method.</description>
          <long-description></long-description>
          <tag name="param" line="449" description="&lt;p&gt;The role to check for access.&lt;/p&gt;" type="\Parse\ParseRole" variable="$role">
            <type>\Parse\ParseRole</type>
          </tag>
          <tag name="return" line="449" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$role</name>
          <default></default>
          <type>\Parse\ParseRole</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="463" package="Parse">
        <name>setRoleReadAccess</name>
        <full_name>\Parse\ParseACL::setRoleReadAccess()</full_name>
        <docblock line="463">
          <description>Set whether users belonging to the given role are allowed to read this
object. The role must already be saved on the server and its data must
have been fetched in order to use this method.</description>
          <long-description></long-description>
          <tag name="param" line="463" description="&lt;p&gt;The role to assign access.&lt;/p&gt;" type="\Parse\ParseRole" variable="$role">
            <type>\Parse\ParseRole</type>
          </tag>
          <tag name="param" line="463" description="&lt;p&gt;Whether the given role can read this object.&lt;/p&gt;" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$role</name>
          <default></default>
          <type>\Parse\ParseRole</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="479" package="Parse">
        <name>getRoleWriteAccess</name>
        <full_name>\Parse\ParseACL::getRoleWriteAccess()</full_name>
        <docblock line="479">
          <description>Get whether users belonging to the given role are allowed to write this
object. Even if this returns false, the role may still be able to write
it if a parent role has write access. The role must already be saved on
the server and its data must have been fetched in order to use this method.</description>
          <long-description></long-description>
          <tag name="param" line="479" description="&lt;p&gt;The role to check for access.&lt;/p&gt;" type="\Parse\ParseRole" variable="$role">
            <type>\Parse\ParseRole</type>
          </tag>
          <tag name="return" line="479" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$role</name>
          <default></default>
          <type>\Parse\ParseRole</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="493" package="Parse">
        <name>setRoleWriteAccess</name>
        <full_name>\Parse\ParseACL::setRoleWriteAccess()</full_name>
        <docblock line="493">
          <description>Set whether users belonging to the given role are allowed to write this
object. The role must already be saved on the server and its data must
have been fetched in order to use this method.</description>
          <long-description></long-description>
          <tag name="param" line="493" description="&lt;p&gt;The role to assign access.&lt;/p&gt;" type="\Parse\ParseRole" variable="$role">
            <type>\Parse\ParseRole</type>
          </tag>
          <tag name="param" line="493" description="&lt;p&gt;Whether the given role can read this object.&lt;/p&gt;" type="boolean" variable="$allowed">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$role</name>
          <default></default>
          <type>\Parse\ParseRole</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowed</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="516" package="Parse">
        <name>setDefaultACL</name>
        <full_name>\Parse\ParseACL::setDefaultACL()</full_name>
        <docblock line="516">
          <description>Sets a default ACL that will be applied to all ParseObjects when they
are created.</description>
          <long-description></long-description>
          <tag name="param" line="516" description="&lt;p&gt;The ACL to use as a template for all ParseObjects&lt;/p&gt;&#10;&lt;pre&gt;&lt;code&gt;                                  created after setDefaultACL has been called. This&#10;                                  value will be copied and used as a template for the&#10;                                  creation of new ACLs, so changes to the instance&#10;                                  after setDefaultACL() has been called will not be&#10;                                  reflected in new ParseObjects.&lt;/code&gt;&lt;/pre&gt;" type="\Parse\ParseACL" variable="$acl">
            <type>\Parse\ParseACL</type>
          </tag>
          <tag name="param" line="516" description="&lt;p&gt;If true, the ParseACL that is applied to&lt;/p&gt;&#10;&lt;pre&gt;&lt;code&gt;                                  newly-created ParseObjects will provide read&#10;                                  and write access to the ParseUser#getCurrentUser()&#10;                                  at the time of creation. If false, the provided&#10;                                  ACL will be used without modification. If acl is&#10;                                  null, this value is ignored.&lt;/code&gt;&lt;/pre&gt;" type="boolean" variable="$withAccessForCurrentUser">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Parse\ParseACL</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$withAccessForCurrentUser</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="ParseFile.php" generated-path="ParseFile.html" hash="e4b035f2241387d40056b00b04f1ccfe" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends/>
      <implements>\Parse\Internal\Encodable</implements>
      <name>ParseFile</name>
      <full_name>\Parse\ParseFile</full_name>
      <docblock line="11">
        <description>ParseFile - Representation of a Parse File object.</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="38" package="Parse">
        <name>getData</name>
        <full_name>\Parse\ParseFile::getData()</full_name>
        <docblock line="38">
          <description>Return the data for the file, downloading it if not already present.</description>
          <long-description></long-description>
          <tag name="returns" line="38" description="mixed"/>
          <tag name="throws" line="38" description="" type="\Parse\ParseException">
            <type>\Parse\ParseException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="55" package="Parse">
        <name>getURL</name>
        <full_name>\Parse\ParseFile::getURL()</full_name>
        <docblock line="55">
          <description>Return the URL for the file, if saved.</description>
          <long-description></long-description>
          <tag name="returns" line="55" description="string|null"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="66" package="Parse">
        <name>getName</name>
        <full_name>\Parse\ParseFile::getName()</full_name>
        <docblock line="66">
          <description>Return the name for the file
Upon saving to Parse, the name will change to a unique identifier.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="76" package="Parse">
        <name>getMimeType</name>
        <full_name>\Parse\ParseFile::getMimeType()</full_name>
        <docblock line="76">
          <description>Return the mimeType for the file, if set.</description>
          <long-description></long-description>
          <tag name="return" line="76" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="91" package="Parse">
        <name>createFromData</name>
        <full_name>\Parse\ParseFile::createFromData()</full_name>
        <docblock line="91">
          <description>Create a Parse File from data
i.e. $file = ParseFile::createFromData("hello world!", "hi.txt");</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The file contents&lt;/p&gt;" type="mixed" variable="$contents">
            <type>mixed</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The file name on Parse, can be used to detect mimeType&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;Optional, The mime-type to use when saving the file&lt;/p&gt;" type="string" variable="$mimeType">
            <type>string</type>
          </tag>
          <tag name="returns" line="91" description="ParseFile"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contents</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mimeType</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="111" package="Parse">
        <name>createFromFile</name>
        <full_name>\Parse\ParseFile::createFromFile()</full_name>
        <docblock line="111">
          <description>Create a Parse File from the contents of a local file
i.e. $file = ParseFile::createFromFile("/tmp/foo.bar",
"foo.bar");</description>
          <long-description></long-description>
          <tag name="param" line="111" description="&lt;p&gt;Path to local file&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="111" description="&lt;p&gt;Filename to use on Parse, can be used to detect mimeType&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="111" description="&lt;p&gt;Optional, The mime-type to use when saving the file&lt;/p&gt;" type="string" variable="$mimeType">
            <type>string</type>
          </tag>
          <tag name="returns" line="111" description="ParseFile"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mimeType</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="154" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseFile::save()</full_name>
        <docblock line="154">
          <description>Uploads the file contents to Parse, if not saved.</description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="ParseRelation.php" generated-path="ParseRelation.html" hash="38167ef1f3c8b12a95ee9b81a7bbbdea" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="14" package="Parse">
      <extends/>
      <name>ParseRelation</name>
      <full_name>\Parse\ParseRelation</full_name>
      <docblock line="14">
        <description>ParseRelation - A class that is used to access all of the children of a many-to-many relationship. Each instance
of ParseRelation is associated with a particular parent object and key.</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Parse"/>
        <tag name="author" line="14" description="Mohamed Madbouli" link="mailto:mohamedmadbouli@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="36" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseRelation::__construct()</full_name>
        <docblock line="36">
          <description>Creates a new Relation for the given parent object, key and class name of target objects.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;The parent of this relation.&lt;/p&gt;" type="\Parse\ParseObject" variable="$parent">
            <type>\Parse\ParseObject</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The key of the relation in the parent object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The className of the target objects.&lt;/p&gt;" type="string" variable="$targetClassName">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>\Parse\ParseObject</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$targetClassName</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="72" package="Parse">
        <name>add</name>
        <full_name>\Parse\ParseRelation::add()</full_name>
        <docblock line="72">
          <description>Adds a ParseObject or an array of ParseObjects to the relation.</description>
          <long-description></long-description>
          <tag name="param" line="72" description="&lt;p&gt;The item or items to add.&lt;/p&gt;" type="mixed" variable="$objects">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objects</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="87" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseRelation::remove()</full_name>
        <docblock line="87">
          <description>Removes a ParseObject or an array of ParseObjects from this relation.</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;The item or items to remove.&lt;/p&gt;" type="mixed" variable="$objects">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objects</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="102" package="Parse">
        <name>getTargetClass</name>
        <full_name>\Parse\ParseRelation::getTargetClass()</full_name>
        <docblock line="102">
          <description>Returns the target classname for the relation.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="112" package="Parse">
        <name>setTargetClass</name>
        <full_name>\Parse\ParseRelation::setTargetClass()</full_name>
        <docblock line="112">
          <description>Set the target classname for the relation.</description>
          <long-description></long-description>
          <tag name="param" line="112" description="" type="" variable="$className"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="122" package="Parse">
        <name>setParent</name>
        <full_name>\Parse\ParseRelation::setParent()</full_name>
        <docblock line="122">
          <description>Set the parent object for the relation.</description>
          <long-description></long-description>
          <tag name="param" line="122" description="" type="" variable="$parent"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="131" package="Parse">
        <name>getQuery</name>
        <full_name>\Parse\ParseRelation::getQuery()</full_name>
        <docblock line="131">
          <description>Gets a query that can be used to query the objects in this relation.</description>
          <long-description></long-description>
          <tag name="return" line="131" description="That restricts the results to objects in this relations." type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzNVm1v2zYQ/q5fcQECxA5s5we4yRoUQTEMWbIu35YhoCnaYiORHkk5NYr89x7fJNGS6mXA0OqDLYm855577o6nd79si22WCVIxvSWUwT1Rmi2zWofbx1+FYUqQ8tE9fmIlMVyKuy1T7maZZRfn5xmcQ7IOc7gGWhKtwRTEANeAkDkYCYRShq9JWYJc4yoDWvAyV0zYZwIVEfu5kXP7Dyrg6YJvF3BDaAFcaEMEZdYnGqRu0Q/6lJQTg95euCkQcUuU4bQuibK3TBiQq8+MGiAih2e2XyCURXuPCjyTDQMP6l6R2hRSAcCtLFCkHG5JvpJ1yeFd5d9U4cX79WpBZXWFZhdZ5mNPyX3NMgCnFljoHfJxG+48mzk8oBiRoZUGo4kCLJzRBf5uFd9hdHDqdy57mNooLjYBDsOLMqtGJOGeEy0G8NH0CLgL8ncUIbowRG1YhNQDmH7Dh2i3TBT5oBhuwgyCYC/QyLZG/S34hu+wRhLWMxefTaPXW0QuAzxCEGhPqkT3ICQ019E0RJQghrusXNC93q7+IOyBYm/UvV6VnMK6FtT5fnqi2EtG1dRMQtgzx3zWd3QJoi7LKaJ8zTwTFGJ+FXhfduuvWbTxXjaV07zuQ/cLAeA1KYZb8oyloGvF/AmSpAEKor2qfFOYqGXbzofpDlzTd7i1u9MUSr5oeLz5QtnWOulVbyMjE5bXvcO8FvlvbJ+q2YrG1zA5SZSbhpUjgr72zC3uoe2h3q1VCn7SoLcQLl7XaW3Ik7N43MONUlIt2i5UDKuS7fAEXCtZgXmRkPP1mjn8u1B4Z9MRHpboiWf6/zBA4NR9Wk3XeW7PlW7b46lCBBClyL6ZIyEOO6a6PTtQURX/gkROQ8e5ruSGVRbV/jsIkufjrYiLk2h+UC9cPzla7Xon8dHjJfwV7//uin4q42i2HYzaDs/tBnvm2/xYvzao86snXHtod0xSW19muAsN8OSuOh6bUph18Kb91v/EKrljb8mXL4j+Qf3mlCnnejxrfv2HJs6ma9bA/WSJM7USujuS3KhyYzmO8cEMKWcZJt+o+of8G/WD+bAKfZ5/MvMfOIax0QzfUZo6pdla9IbpQL7ocdrpR+y/4dwZfyOE/TCbHEyJ74yolNpHZmy//lMztffzmmKzrljz1R9XWPxI8d9BYx0bEupa4A9n+mBBFbMV4k5oF7GuS39aj4F+51sIhXfInTI69Sw77ed3DGcrto8zml85lyx/kJMzz+Zs1mstI+8lt/NtMh23xj5rTe3AXCY17gx8Bl6zb+IoVrA=</source>
  </file>
  <file path="ParseSessionStorage.php" generated-path="ParseSessionStorage.html" hash="d4c92cd56cfab6c0244d823dbbc12318" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends/>
      <implements>\Parse\ParseStorageInterface</implements>
      <name>ParseSessionStorage</name>
      <full_name>\Parse\ParseSessionStorage</full_name>
      <docblock line="11">
        <description>ParseSessionStorage - Uses PHP session support for persistent storage.</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="19" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseSessionStorage::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="31" package="Parse">
        <name>set</name>
        <full_name>\Parse\ParseSessionStorage::set()</full_name>
        <docblock line="31">
          <description>Sets a key-value pair in storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::set()" refers="\Parse\ParseStorageInterface::set()" link="/classes/Parse.ParseStorageInterface.html#method_set"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="36" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseSessionStorage::remove()</full_name>
        <docblock line="36">
          <description>Remove a key from storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::remove()" refers="\Parse\ParseStorageInterface::remove()" link="/classes/Parse.ParseStorageInterface.html#method_remove"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="41" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseSessionStorage::get()</full_name>
        <docblock line="41">
          <description>Gets the value for a key from storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::get()" refers="\Parse\ParseStorageInterface::get()" link="/classes/Parse.ParseStorageInterface.html#method_get"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="49" package="Parse">
        <name>clear</name>
        <full_name>\Parse\ParseSessionStorage::clear()</full_name>
        <docblock line="49">
          <description>Clear all the values in storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::clear()" refers="\Parse\ParseStorageInterface::clear()" link="/classes/Parse.ParseStorageInterface.html#method_clear"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="54" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseSessionStorage::save()</full_name>
        <docblock line="54">
          <description>Save the data, if necessary.  This would be a no-op when using the
$_SESSION implementation, but could be used for saving to file or
database as an action instead of on every set.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::save()" refers="\Parse\ParseStorageInterface::save()" link="/classes/Parse.ParseStorageInterface.html#method_save"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="60" package="Parse">
        <name>getKeys</name>
        <full_name>\Parse\ParseSessionStorage::getKeys()</full_name>
        <docblock line="60">
          <description>Get all keys in storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::getKeys()" refers="\Parse\ParseStorageInterface::getKeys()" link="/classes/Parse.ParseStorageInterface.html#method_getKeys"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="65" package="Parse">
        <name>getAll</name>
        <full_name>\Parse\ParseSessionStorage::getAll()</full_name>
        <docblock line="65">
          <description>Get all key-value pairs from storage.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseStorageInterface::getAll()" refers="\Parse\ParseStorageInterface::getAll()" link="/classes/Parse.ParseStorageInterface.html#method_getAll"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="19" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="31" code="PPC:ERR-50008">No summary for method set()</error>
      <error line="36" code="PPC:ERR-50008">No summary for method remove()</error>
      <error line="41" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="49" code="PPC:ERR-50008">No summary for method clear()</error>
      <error line="54" code="PPC:ERR-50008">No summary for method save()</error>
      <error line="60" code="PPC:ERR-50008">No summary for method getKeys()</error>
      <error line="65" code="PPC:ERR-50008">No summary for method getAll()</error>
    </parse_markers>
    <source>eJyNlGFv2jAQhr/nV1wlJBK0hh9A6VptTEPTOiS2fammyIQLeDi257NhVcV/n50EQjVI+wWFnO9533sPfPNer3UUSVYiaZYjzJghHEXRcDCIYFB/nSMRV3JulWErhGv4QUgw+zwDqitATmtlLBTKgEZDnCxKC1R3pJ4UYHdeYRMINbZ6xZxd+yaAT4pyBV+ZUdYquCl+l3fFIs1VeevPDaNcMKKzdnipBZZe7lCu30+lRVP4kaLnKAKo5oGguGXGGzNcrurzsONCVFY9y0O2TDg/HpfAgDTmvOA5bPAprfqH/lMbvmUWodfM9wWfYAx9HWgfmWX9UVDUbiF8Z+FkbkNGWZYr6YVdbuPE158DD3gBcZNiRpZZR3ECV+NxiDebT+bz6beH7P7D9+nPSdK0ANi1UTuQuKsnmPzNUQeNuKkD9E+2E7jGa0LpyMICIWdC4BIKbsim/aYnGVUP+6OrK06ENu4dXDz27JrT9W079K+ktdR1zIfDjGFP8YnG/lxElZ6P+h30qi20MXXhH0NLEKmbRpfoBku1xUqgBTv52pA1PrmIXTWmX+709fAabhuhQeuMfMOop5tqmqQT4qLDXCAz8dvCfLmr81tiPsWWNhzCgwJ2yPiP4waXKVT3w5rJpfB/puOd4G+YcEccHaQnQ3Ql7K3RiWYzdeU024Ra58+0i3wvxP/gLloD2/8DHvKiWw==</source>
  </file>
  <file path="ParseAnalytics.php" generated-path="ParseAnalytics.html" hash="674fdd677f72a26ea4a9515275d0773c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="13" package="Parse">
      <extends/>
      <name>ParseAnalytics</name>
      <full_name>\Parse\ParseAnalytics</full_name>
      <docblock line="13">
        <description>ParseAnalytics - Handles sending app-open and custom analytics events</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Parse"/>
        <tag name="author" line="13" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="44" package="Parse">
        <name>track</name>
        <full_name>\Parse\ParseAnalytics::track()</full_name>
        <docblock line="44">
          <description>Tracks the occurrence of a custom event with additional dimensions.</description>
          <long-description>Parse will store a data point at the time of invocation with the given
event name.

Dimensions will allow segmentation of the occurrences of this custom
event. Keys and values should be strings, and will throw
otherwise.

To track a user signup along with additional metadata, consider the
following:
&lt;pre&gt;
$dimensions = array(
 'gender' =&gt; 'm',
 'source' =&gt; 'web',
 'dayType' =&gt; 'weekend'
);
ParseAnalytics::track('signup', $dimensions);
&lt;/pre&gt;

There is a default limit of 4 dimensions per event tracked.</long-description>
          <tag name="param" line="44" description="&lt;p&gt;The name of the custom event&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="44" description="&lt;p&gt;The dictionary of segment information&lt;/p&gt;" type="array" variable="$dimensions">
            <type>array</type>
          </tag>
          <tag name="throws" line="44" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="44" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dimensions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyFVFFP2zAQfs+vuElIaVFpN2lPhTIYA02bNtDo46TKONfW4NiZ7bRUwH/f2Ze0Kdu0PETJ2ffd99199smHalllmREl+kpIhBvhPB5nWe0Rfl4+SqyCsoYCo8PDDA55/dwIvQlKejiCz8IUGj14NIUyCxBVdWQrNEBxkLUPtqTPdj+u0ARPQBHrjCo+iAUCo6aQqMPSOgC4sl5a+CacDcHCyfy+PJvfDaUtT2nfKJNaeP+KTfaUZQCJKBDW1BG8h7BEsFLWzqEhgXYOouWV2MBahSWIolBRqdBQqBKNp28/ZKBUhbZpDZTmkAAKEQRUVlG6CKlEoKwIrszKShGhGDiuLRQVYiwuGfvN4Bz9tC3JZYTWdk0tXVA4MBhB7yvxHFK+UdPBH8JX3Pg0gZXQdZzO0ta6gDskBY7G5AdpNRULS2fXnG2phFsrv0duaiHEVpJscoUDrxamroijpXG/bl6JQcTmDECSGlXQfsJkoLmNsqj6mP9PKoen/HmwazpMQDgnNj1egXxBzkKXw+QU8jIftGFvayeRw2u82y0UYjPdVNsVfKD8nBf7x52Jbn0zHid9vZyV5YMunTblZLRl27SFWoVA7Sc34FzUOoBWpQpxLO87JoKKesBjT2Ww6DaXzoATZTMVOIjGAH4IP/mknXzXs3u5qVuw18KYWyiZZuI2EaHxEtlzbl2ZLNVlkTzgOye+iTsMtTNQqkcsUmhE76q+00oSZ4KRMK9NKsTqeknC4K8D7fcp+SnCNEInlKNKTuE+g5pDj5qh0TRhmEwm8Lbf5AG7FQyuYcu1l59zp0jaH62Ckn6i8StnV+THYpg3pV7Sm3JQyCX0uoyFh4MH3EQHHaQTtKsfCb5RfsYT68VtfXh+hm6MU3Y5/2DdOfX4WKEMWLRGeNg/v1vOLWt+N9NJbr7QitSOxzOHvygj9Jr9+c317ZQPR/wbvRvxHTzKYchjaNdMrXX7zbMltGBvxQq/3F5/7zaon7YlTi97d+4ZnSBq6P+ssg9L18XOGY2me2/NjK45W2CrZHcrsJQdnXTUE06z2m91xAqzq+sfF5ez649fLi+me8RffgMNPyXx</source>
  </file>
  <file path="ParseBytes.php" generated-path="ParseBytes.html" hash="d16c239725a38aa4b9e9372e0ed76369" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends/>
      <implements>\Parse\Internal\Encodable</implements>
      <name>ParseBytes</name>
      <full_name>\Parse\ParseBytes</full_name>
      <docblock line="11">
        <description>ParseBytes - Representation of a Byte array for storage on a Parse Object.</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="26" package="Parse">
        <name>createFromByteArray</name>
        <full_name>\Parse\ParseBytes::createFromByteArray()</full_name>
        <docblock line="26">
          <description>Create a ParseBytes object with a given byte array.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="" type="array" variable="$byteArray">
            <type>array</type>
          </tag>
          <tag name="return" line="26" description="" type="\Parse\ParseBytes">
            <type>\Parse\ParseBytes</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$byteArray</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="40" package="Parse">
        <name>createFromBase64Data</name>
        <full_name>\Parse\ParseBytes::createFromBase64Data()</full_name>
        <docblock line="40">
          <description>Create a ParseBytes object with a given base 64 encoded data string</description>
          <long-description></long-description>
          <tag name="param" line="40" description="" type="string" variable="$base64Data">
            <type>string</type>
          </tag>
          <tag name="return" line="40" description="" type="\Parse\ParseBytes">
            <type>\Parse\ParseBytes</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$base64Data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVE1v2zAMvftXEMUAO0GbXIpe0mRZuxXYYdiwc4CAVpjYnS0ZkpwiKPLfR0l2oqTtNhS7GDA/Hh8fSd1+bIomSSTWZBoUBD9QG5okyXg4TGAYfu92lgxcwU9qNBmSFm2pJKg1IDgfoNa4g7XSYKzSuCFgN4Zk+J4/krAjRnOAc67yy0UErzdhawvOBXhQRij4hlpZq+B2/VjP1/lIqHrGceNEVGhMTKmsm4pqJmRg4c2Lr9KSllgtvkihVphXlDwnCYBvB1yxLWpuJT/Q9uYxfxtdbpGtH5zvk3NNTjLvNTk3xgSU7w2eSluwY1NuSUbQI5/Y1W1QY90pdSwRR2iyrZYR/JFam1elYHFZeAHrVgo/AOEZPWhV3/V42XmBAac/O6BgMzAFSU9RkWwwidxXM0P2iBbhhKiOYwh2pv37NEJejJtrIDclWsEKLXJ7upSbl5oFO9fkpJvrzxz6v1Q7AGYR+LsUex3pT5r163bg9TbMKSE/DibVSndKWXo/TC8hRC9X5PQ8Se7J2qL8y3TfpvUv2xXwY4LxIZ0vij9PAr5yPmklSh7Rtn9H9Mkz88qsj3cL83IjlabzmR/YL8OGZRFRv2tTuLgIwvCrRSgKyF50gCa0MOgy+9zRFEShg3qduvt40J5e1qWky6XdNZTCdAapX5/0sneFKXlXN7+Ora8z8GHdZPbJb8MvusE=</source>
  </file>
  <file path="ParseException.php" generated-path="ParseException.html" hash="1bfa92be791391eaa4f56d6d4726e541" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="11" package="Parse">
      <extends>\Exception</extends>
      <name>ParseException</name>
      <full_name>\Parse\ParseException</full_name>
      <docblock line="11">
        <description>ParseException - Wrapper for \Exception class</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="21" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseException::__construct()</full_name>
        <docblock line="21">
          <description>Constructs a Parse\Exception</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;Message for the Exception.&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="21" description="&lt;p&gt;Error code.&lt;/p&gt;" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="21" description="&lt;p&gt;Previous Exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9kMtuwjAQRffzFbPIokQp6ZpHi1TRHVJ33VRCxkxI2sS2/KiQEP/eiZOUgCpmEY3je+be8eLFlAZAiYacEZLwXVhHc4A8TQHT7rg+SjK+0gof8cMKY8hioS1+Xi5kLZxjoGVWPOhbHAg7Ov4SwZdMIL5pJzVuhNXea1wUX82q2E2lbp5Zl0Occ+tKR09q70Z+cAJAjBmRx79q5bwN0jsUHTyStopOxsGsaJCllTpgWwmv7WLUTd+0e/mS8I+fXrGV8thXIvWeYre2lqn2eC0evU9iLP1UOvBuQ3PjkPPXhF1dSSyCkpHabuWw2cMQNeuNl/iUAd6tf/2XqEJdTxg9RZyjkvKz2R2v7IJP5gydAc6/LjGu8A==</source>
  </file>
  <file path="ParseStorageInterface.php" generated-path="ParseStorageInterface.html" hash="f14bb005d17d01887c10661fdbb62452" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Parse" line="11" package="Parse">
      <name>ParseStorageInterface</name>
      <full_name>\Parse\ParseStorageInterface</full_name>
      <docblock line="11">
        <description>ParseStorageInterface - Specifies an interface for implementing persistence.</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Parse"/>
        <tag name="author" line="11" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="22" package="Parse">
        <name>set</name>
        <full_name>\Parse\ParseStorageInterface::set()</full_name>
        <docblock line="22">
          <description>Sets a key-value pair in storage.</description>
          <long-description></long-description>
          <tag name="param" line="22" description="&lt;p&gt;The key to set&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="22" description="&lt;p&gt;The value to set&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="22" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="31" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseStorageInterface::remove()</full_name>
        <docblock line="31">
          <description>Remove a key from storage.</description>
          <long-description></long-description>
          <tag name="param" line="31" description="&lt;p&gt;The key to remove.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="31" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="40" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseStorageInterface::get()</full_name>
        <docblock line="40">
          <description>Gets the value for a key from storage.</description>
          <long-description></long-description>
          <tag name="param" line="40" description="&lt;p&gt;The key to get the value for&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="40" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="47" package="Parse">
        <name>clear</name>
        <full_name>\Parse\ParseStorageInterface::clear()</full_name>
        <docblock line="47">
          <description>Clear all the values in storage.</description>
          <long-description></long-description>
          <tag name="return" line="47" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="56" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseStorageInterface::save()</full_name>
        <docblock line="56">
          <description>Save the data, if necessary.  This would be a no-op when using the
$_SESSION implementation, but could be used for saving to file or
database as an action instead of on every set.</description>
          <long-description></long-description>
          <tag name="return" line="56" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="63" package="Parse">
        <name>getKeys</name>
        <full_name>\Parse\ParseStorageInterface::getKeys()</full_name>
        <docblock line="63">
          <description>Get all keys in storage.</description>
          <long-description></long-description>
          <tag name="return" line="63" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="70" package="Parse">
        <name>getAll</name>
        <full_name>\Parse\ParseStorageInterface::getAll()</full_name>
        <docblock line="70">
          <description>Get all key-value pairs from storage.</description>
          <long-description></long-description>
          <tag name="return" line="70" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJylk8tu2zAQRff6ill4kRi2/AEJ2hRFUgRB0qLqvhjRQ5sNHwIfTo2i/94h6cYPxKmDbgSJmrn38HJ4+X5YDk1j0VAYUBB8QR/oomlm43ED4/rZRedxQbc2kpe5aArdQEJJRQHQgnr+IZ0HZQZNhmxUdgED+aBCJCuoZb0secU+jywHVbwsYYpLbgW4cUE4uEfvYnRwKX+YK9m3wpl3XDdrtk4vgjW/mgagoAPLdhSZDx5pPV2hTgQDKuazEGpfW8pqLVN5NPzHZ+wR9/DytyXlbmCUQHGv0KifNAcYVeFcWN92Sjf1nmLyFmzSuqzM+DmkXisBMlkRlbO55Sx7TjaC5xd7G/lKxq2obgWkd+bEHezw+yLRvhWsthW2A6ZPOdz4vO988v/Dt6C4r/YCacn8KOpik+EB50dNyGhab+XDsRk4JRGR9c4OTDrk48n6c4w4ASXBkqAQ0K/bPEYqwJNLeg59PkXrpm6ApyVZSCGHwZ1VZ/S9u+66288P21uE2XUCfYog/kqkwLOXEw+4Kv0OpNIEm9QKRY+Bvcr9xEquLF9EnIOTwF+0Ir/Og/fmBNiUDgPgaSgZc/7/She9x/Vrp3jHGq/o79zlcHzYTjX7oHXx+g1/ALBoh0s=</source>
  </file>
  <file path="ParseRole.php" generated-path="ParseRole.html" hash="f9e92763f7dfc70cad573d09d4639348" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Parse" line="13" package="Parse">
      <extends>\Parse\ParseObject</extends>
      <name>ParseRole</name>
      <full_name>\Parse\ParseRole</full_name>
      <docblock line="13">
        <description>ParseRole - Representation of an access Role.</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Parse"/>
        <tag name="author" line="13" description="Fosco Marotto" link="mailto:fjm@fb.com"/>
        <tag name="inherited_from" description="\Parse\ParseObject" refers="\Parse\ParseObject" link="/classes/Parse.ParseObject.html"/>
      </docblock>
      <property static="true" visibility="public" namespace="Parse" line="16" package="Parse">
        <name>$parseClassName</name>
        <full_name>\Parse\ParseRole::parseClassName</full_name>
        <default>"_Role"</default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="26" package="Parse">
        <name>createRole</name>
        <full_name>\Parse\ParseRole::createRole()</full_name>
        <docblock line="26">
          <description>Create a ParseRole object with a given name and ACL.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="26" description="" type="\Parse\ParseACL" variable="$acl">
            <type>\Parse\ParseACL</type>
          </tag>
          <tag name="return" line="26" description="" type="\Parse\ParseRole">
            <type>\Parse\ParseRole</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Parse\ParseACL</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="39" package="Parse">
        <name>getName</name>
        <full_name>\Parse\ParseRole::getName()</full_name>
        <docblock line="39">
          <description>Returns the role name.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="51" package="Parse">
        <name>setName</name>
        <full_name>\Parse\ParseRole::setName()</full_name>
        <docblock line="51">
          <description>Sets the role name.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;The role name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="73" package="Parse">
        <name>getUsers</name>
        <full_name>\Parse\ParseRole::getUsers()</full_name>
        <docblock line="73">
          <description>Gets the ParseRelation for the ParseUsers which are direct children of
  this role.  These users are granted any privileges that this role
  has been granted.</description>
          <long-description></long-description>
          <tag name="return" line="73" description="" type="\Parse\ParseRelation">
            <type>\Parse\ParseRelation</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="85" package="Parse">
        <name>getRoles</name>
        <full_name>\Parse\ParseRole::getRoles()</full_name>
        <docblock line="85">
          <description>Gets the ParseRelation for the ParseRoles which are direct children of
  this role.  These roles' users are granted any privileges that this role
  has been granted.</description>
          <long-description></long-description>
          <tag name="return" line="85" description="" type="\Parse\ParseRelation">
            <type>\Parse\ParseRelation</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="90" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseRole::save()</full_name>
        <docblock line="90">
          <description>Save Object to Parse</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Parse\ParseObject::save()" refers="\Parse\ParseObject::save()" link="/classes/Parse.ParseObject.html#method_save"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="82" package="Parse">
        <name>__construct</name>
        <full_name>\Parse\ParseObject::__construct()</full_name>
        <docblock line="82">
          <description>Create a Parse Object</description>
          <long-description>Creates a pointer object if an objectId is provided,
otherwise creates a new object.</long-description>
          <tag name="param" line="82" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="82" description="&lt;p&gt;Object Id for Existing object.&lt;/p&gt;" type="mixed" variable="$objectId">
            <type>mixed</type>
          </tag>
          <tag name="param" line="82" description="" type="boolean" variable="$isPointer">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="82" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="164" package="Parse">
        <name>get</name>
        <full_name>\Parse\ParseObject::get()</full_name>
        <docblock line="164">
          <description>Get current value for an object property.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="&lt;p&gt;Key to retrieve from the estimatedData array.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="164" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="164" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="183" package="Parse">
        <name>has</name>
        <full_name>\Parse\ParseObject::has()</full_name>
        <docblock line="183">
          <description>Check if the object has a given key</description>
          <long-description></long-description>
          <tag name="param" line="183" description="&lt;p&gt;Key to check&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="183" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="195" package="Parse">
        <name>isKeyDirty</name>
        <full_name>\Parse\ParseObject::isKeyDirty()</full_name>
        <docblock line="195">
          <description>Check if the a value associated with a key has been
added/updated/removed and not saved yet.</description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="195" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="205" package="Parse">
        <name>isDirty</name>
        <full_name>\Parse\ParseObject::isDirty()</full_name>
        <docblock line="205">
          <description>Check if the object or any of its child objects have unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="205" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="248" package="Parse">
        <name>set</name>
        <full_name>\Parse\ParseObject::set()</full_name>
        <docblock line="248">
          <description>Validate and set a value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="248" description="&lt;p&gt;Key to set a value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="248" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="248" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="248" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="270" package="Parse">
        <name>setArray</name>
        <full_name>\Parse\ParseObject::setArray()</full_name>
        <docblock line="270">
          <description>Set an array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="270" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="270" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="270" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="292" package="Parse">
        <name>setAssociativeArray</name>
        <full_name>\Parse\ParseObject::setAssociativeArray()</full_name>
        <docblock line="292">
          <description>Set an associative array value for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="292" description="&lt;p&gt;Key to set the value for on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="292" description="&lt;p&gt;Value to set on the key.&lt;/p&gt;" type="array" variable="$value">
            <type>array</type>
          </tag>
          <tag name="return" line="292" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="292" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="314" package="Parse">
        <name>remove</name>
        <full_name>\Parse\ParseObject::remove()</full_name>
        <docblock line="314">
          <description>Remove a value from an array for an object key.</description>
          <long-description></long-description>
          <tag name="param" line="314" description="&lt;p&gt;Key to remove the value from on the object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="314" description="&lt;p&gt;Value to remove from the array.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="314" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="throws" line="314" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="330" package="Parse">
        <name>revert</name>
        <full_name>\Parse\ParseObject::revert()</full_name>
        <docblock line="330">
          <description>Revert all unsaved operations.</description>
          <long-description></long-description>
          <tag name="return" line="330" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="342" package="Parse">
        <name>clear</name>
        <full_name>\Parse\ParseObject::clear()</full_name>
        <docblock line="342">
          <description>Clear all keys on this object by creating delete operations
for each key.</description>
          <long-description></long-description>
          <tag name="return" line="342" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="386" package="Parse">
        <name>getClassName</name>
        <full_name>\Parse\ParseObject::getClassName()</full_name>
        <docblock line="386">
          <description>Get the Parse Class Name for the object.</description>
          <long-description></long-description>
          <tag name="return" line="386" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="396" package="Parse">
        <name>getObjectId</name>
        <full_name>\Parse\ParseObject::getObjectId()</full_name>
        <docblock line="396">
          <description>Get the objectId for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="396" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="406" package="Parse">
        <name>getCreatedAt</name>
        <full_name>\Parse\ParseObject::getCreatedAt()</full_name>
        <docblock line="406">
          <description>Get the createdAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="406" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="416" package="Parse">
        <name>isDataAvailable</name>
        <full_name>\Parse\ParseObject::isDataAvailable()</full_name>
        <docblock line="416">
          <description>Returns true if the object has been fetched.</description>
          <long-description></long-description>
          <tag name="return" line="416" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="432" package="Parse">
        <name>getUpdatedAt</name>
        <full_name>\Parse\ParseObject::getUpdatedAt()</full_name>
        <docblock line="432">
          <description>Get the updatedAt for the object, or null if unsaved.</description>
          <long-description></long-description>
          <tag name="return" line="432" description="" type="\DateTime|null">
            <type>\DateTime</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="447" package="Parse">
        <name>create</name>
        <full_name>\Parse\ParseObject::create()</full_name>
        <docblock line="447">
          <description>Static method which returns a new Parse Object for a given class</description>
          <long-description>Optionally creates a pointer object if the objectId is provided.</long-description>
          <tag name="param" line="447" description="&lt;p&gt;Class Name for data on Parse.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="param" line="447" description="&lt;p&gt;Unique identifier for existing object.&lt;/p&gt;" type="string" variable="$objectId">
            <type>string</type>
          </tag>
          <tag name="return" line="447" description="" type="Object">
            <type>Object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectId</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$isPointer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="464" package="Parse">
        <name>fetch</name>
        <full_name>\Parse\ParseObject::fetch()</full_name>
        <docblock line="464">
          <description>Fetch the whole object from the server and update the local object.</description>
          <long-description></long-description>
          <tag name="return" line="464" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="632" package="Parse">
        <name>destroy</name>
        <full_name>\Parse\ParseObject::destroy()</full_name>
        <docblock line="632">
          <description>Delete object.</description>
          <long-description></long-description>
          <tag name="return" line="632" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="655" package="Parse">
        <name>destroyAll</name>
        <full_name>\Parse\ParseObject::destroyAll()</full_name>
        <docblock line="655">
          <description>Delete an array of objects.</description>
          <long-description></long-description>
          <tag name="param" line="655" description="&lt;p&gt;Objects to destroy.&lt;/p&gt;" type="array" variable="$objects">
            <type>array</type>
          </tag>
          <tag name="param" line="655" description="&lt;p&gt;Whether to use the master key or not.&lt;/p&gt;" type="boolean" variable="$useMasterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="655" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$objects</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useMasterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="725" package="Parse">
        <name>increment</name>
        <full_name>\Parse\ParseObject::increment()</full_name>
        <docblock line="725">
          <description>Increment a numeric key by a certain value.</description>
          <long-description></long-description>
          <tag name="param" line="725" description="&lt;p&gt;Key for numeric value on object to increment.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="725" description="&lt;p&gt;Value to increment by.&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="725" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="738" package="Parse">
        <name>add</name>
        <full_name>\Parse\ParseObject::add()</full_name>
        <docblock line="738">
          <description>Add a value to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="738" description="&lt;p&gt;Key for array value on object to add a value to.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="738" description="&lt;p&gt;Value to add.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="738" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="751" package="Parse">
        <name>addUnique</name>
        <full_name>\Parse\ParseObject::addUnique()</full_name>
        <docblock line="751">
          <description>Add unique values to an array property.</description>
          <long-description></long-description>
          <tag name="param" line="751" description="&lt;p&gt;Key for array value on object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="751" description="&lt;p&gt;Value list to add uniquely.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="751" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="763" package="Parse">
        <name>delete</name>
        <full_name>\Parse\ParseObject::delete()</full_name>
        <docblock line="763">
          <description>Delete a key from an object.</description>
          <long-description></long-description>
          <tag name="param" line="763" description="&lt;p&gt;Key to remove from object.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="763" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="823" package="Parse">
        <name>save</name>
        <full_name>\Parse\ParseObject::save()</full_name>
        <docblock line="823">
          <description>Save Object to Parse</description>
          <long-description></long-description>
          <tag name="return" line="823" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="838" package="Parse">
        <name>saveAll</name>
        <full_name>\Parse\ParseObject::saveAll()</full_name>
        <docblock line="838">
          <description>Save all the objects in the provided array</description>
          <long-description></long-description>
          <tag name="param" line="838" description="" type="array" variable="$list">
            <type>array</type>
          </tag>
          <tag name="return" line="838" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$list</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1076" package="Parse">
        <name>getRelation</name>
        <full_name>\Parse\ParseObject::getRelation()</full_name>
        <docblock line="1076">
          <description>Access or create a Relation value for a key.</description>
          <long-description></long-description>
          <tag name="param" line="1076" description="&lt;p&gt;The key to access the relation for.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1076" description="The ParseRelation object if the relation already&#10;                      exists for the key or can be created for this key." type="\Parse\ParseRelation">
            <type>\Parse\ParseRelation</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1112" package="Parse">
        <name>setACL</name>
        <full_name>\Parse\ParseObject::setACL()</full_name>
        <docblock line="1112">
          <description>Set ACL for this object.</description>
          <long-description></long-description>
          <tag name="param" line="1112" description="" type="\Parse\ParseACL" variable="$acl">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acl</name>
          <default></default>
          <type>\Parse\ParseACL</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Parse" line="1122" package="Parse">
        <name>getACL</name>
        <full_name>\Parse\ParseObject::getACL()</full_name>
        <docblock line="1122">
          <description>Get ACL assigned to the object.</description>
          <long-description></long-description>
          <tag name="return" line="1122" description="" type="\Parse\ParseACL">
            <type>\Parse\ParseACL</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1144" package="Parse">
        <name>registerSubclass</name>
        <full_name>\Parse\ParseObject::registerSubclass()</full_name>
        <docblock line="1144">
          <description>Register a subclass.  Should be called before any other Parse functions.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="throws" line="1144" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Parse" line="1177" package="Parse">
        <name>query</name>
        <full_name>\Parse\ParseObject::query()</full_name>
        <docblock line="1177">
          <description>Creates a ParseQuery for the subclass of ParseObject.</description>
          <long-description>Cannot be called on the base class ParseObject.</long-description>
          <tag name="return" line="1177" description="" type="\Parse\ParseQuery">
            <type>\Parse\ParseQuery</type>
          </tag>
          <tag name="throws" line="1177" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="90" code="PPC:ERR-50008">No summary for method save()</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $parseClassName</error>
    </parse_markers>
    <source>eJzNVU1v2zAMvftXsEaAOkGb3tOPtQi2YcC+0G23AYUiM7E6RzIkuWnR9r+XlJw4btKgWy+7xDEpPj4+ivTJu6qokkSLObpKSITvwjo8TpLaNf9/h99vk2uUnuxHg0ECg+i6NCXCIVxiZdGh9sIro8FMQWgQUqJzwEeGFMAx55Tgj5ghxOhgErUvjAWAD8ZJA1+ENd4bOJlez8+nk6E08zM6d5TIUhBamxVvPeq8sURyyX2SAFT1pFQSHJOR0KvYP+bgr1QinEJ6xfHpMZ8NtQDRGFsUHkGsJTABExbKF2SfqRvUwCpRbTlcjD8PQ2QMp8KsmFNOq/SMLD0+2HEFXIqCnpDleqRFX1vd5g3mo406prWWQVwZmPLJLGQ56EL3KfKeMaBnuYrTdYFGoxidRdDR6Jk6/eM28vDMoWdjTLPhooRZSBgdTRnBz5bHjryXwevAFwiBFkMOt8gQFXyuwar4WUOprXKZ1xfKHZ6RP0sZO+1vkviBfheDTgtDzfBz/fAWtrouyxe5duVbEVZTyFq2sS+f8qzfb/xAFK1ZgMZFbN37W4kVI2aNHyC9CLT2XbyQkqbN6PIOJshZ6TE1FkF5KISjN7q4TtxgPkwbhKZnjytCe8pdxcobum9gM68dU6CZiYjbs3b75lZ9O4D2unXb93HZvjgqWMZlQ6W21l8OrYNFoSTNLEmQK8szLAtV5hZ5M0UsLku5QHsI3GbadXWI5aiZFdpjToN+B5VVN6rEGXJu4du4JdBK4iZq263uMN51uQP/Xbd7CZKlge62a/4anXh9/KtO/OL2/wu5QhmvkyuwXpNrY1ppQLLulO61OLzs/m4mosJhFgqC5g8ifzNensA2Wdxw8PAA62P5zP1GNnH97ZpMWof0QR+NojCNbkny+ATYMnX6</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Parse" full_name="Parse"/>
  <package name="global" full_name="global"/>
  <namespace name="Parse" full_name="Parse"/>
  <deprecated count="0"/>
</project>
